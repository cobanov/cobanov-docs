{"config":{"lang":["tr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Hello \ud83d\udc4b","text":"<p>Welcome to my blog,</p> <p>Here is a lot of stuff you can find, on my blog I usually write about topics of interest and sometimes I publish translations,</p> <p>In the portfolio part, I have my works, sometimes I produce artistic things. If you want to see it, you can visit it.</p>"},{"location":"about/","title":"Main Page","text":""},{"location":"about/#mert-cobanov-0001","title":"Mert Cobanov #0001","text":"<p>Username: @cobanov  Job: Data Scientist, Refik Anadol Studio  Date of Birth: 02.01.1996 </p>"},{"location":"about/#about","title":"About","text":"<p>Community lover, data scientist and generative artist. I love to share what I know, so I try to provide free data science and machine learning education to everyone on my twitter and youtube channel. I teach at several schools and communities each year. I work as a data scientist at Refik Anadol Studio, where we do great artistic works with my excellent team, and we try to digitize the memories of humanity to immortalize it.</p>"},{"location":"about/#links","title":"Links","text":""},{"location":"about/#more","title":"More","text":"<p>You can see my work in my github repos and my humble portfolio.</p> <p>I really enjoy writing minimal tools that make the lives of software developers easier, building end-to-end pipelines, and doing AI artistic painting works that motivate me immensely. I also digitize and repair old video tapes and bring them to high resolution and high fps forms.</p>"},{"location":"anonymous-domain/","title":"Domain","text":"<p>Private domain registration is an add-on service that many domain registrars offer and charge an extra annual fee for. Normally, when you buy a domain name, your information is listed publicly in the ICANN databases. When you buy a domain privately, the registrar\u2019s information is listed as the contact information. So, the domain name purchase is not anonymous, however it is private.</p>"},{"location":"anonymous-domain/#how-to-buy-a-domain-anonymously","title":"How to Buy A Domain Anonymously","text":"<ol> <li>Use a private web browser like Tor Browser or Brave Browser</li> <li>Use a shell corporation to register the domain name</li> <li>Use a quality VPN service when buying</li> <li>Tick \"private registration\" when registering the domain name</li> <li>Pay with a prepaid credit card or cryptocurrency</li> <li>Use an email address that is only used for this domain registrar</li> <li>Buy from a domain registrar that accepts your payment method</li> <li>Register the domain privately</li> </ol>"},{"location":"anonymous-domain/#be-careful-these-steps","title":"Be Careful These Steps","text":"<p>Some steps you can take to keep your identity secure include:</p> <ul> <li>Using Tor to register the domain name, but understand its limitations</li> <li>Purchase your domain name using a prepaid debit card (Visa or Mastercard)</li> <li>Tick \"private registration\" when registering the domain name, most registrars have this option and it will protect your details from being visible in the whois records. Keep in mind this needs to be done at the time of registration.</li> <li>If you register a domain and then make it private after the fact, your details could have been already archived. You can also use a service like Domains By Proxy (this is what some registrars use)</li> <li>Choose secure passwords (25 to 40 characters in length) for everything from your email, hosting and domain registration. This will be how a hacker would most likely get your information, by exploiting weak passwords in anything remotely linked to your site. I suggest a password manager like 1Password which allows you to generate secure passwords.</li> <li>Don't post any identifying information. Don't use usernames you've used elsewhere. Don't publicly disclose your location, name, age or where you work.</li> <li>Steer clear of social networks like Twitter or Facebook (don't create official accounts for your site on these sites).</li> <li>Choose secure usernames unique to your site, as mentioned above, don't use a username you have used elsewhere. NEVER use default users like in Wordpress, don't use \"admin\" for the username.</li> <li>Create a unique and independent email address, don't use commercial email services like Gmail, Yahoo! Mail or Hotmail as these are vulnerable and can be used to identify you. There are numerous secure email services out there that can help protect you.</li> <li>If you post images, make sure you have stripped any Exif data from them (date and time, location, GPS coordinates, filename, camera type).</li> <li>Disable any kind of social/beacon feature; no comments, no Facebook like buttons or boxes, no analytics code or anything else.</li> </ul>"},{"location":"cyberpunk/","title":"Bir Cypherpunk'\u0131n Manifestosu","text":"<p>by Eric Hughes</p> <p>Elektronik \u00e7a\u011fda a\u00e7\u0131k bir toplum i\u00e7in mahremiyet gereklidir. Gizlilik gizlilik de\u011fildir. \u00d6zel bir konu, t\u00fcm d\u00fcnyan\u0131n bilmesini istemedi\u011fi bir \u015feydir, ancak gizli bir konu, kimsenin bilmesini istemedi\u011fi bir \u015feydir. Gizlilik, kendini d\u00fcnyaya se\u00e7ici olarak g\u00f6sterme g\u00fcc\u00fcd\u00fcr.</p> <p>E\u011fer iki taraf bir t\u00fcr anla\u015fmaya sahipse, her birinin etkile\u015fimlerinin bir an\u0131s\u0131 vard\u0131r. Her bir taraf bununla ilgili kendi an\u0131lar\u0131 hakk\u0131nda konu\u015fabilir; kimse bunu nas\u0131l engelleyebilir? Buna kar\u015f\u0131 yasalar \u00e7\u0131kar\u0131labilir, ancak konu\u015fma \u00f6zg\u00fcrl\u00fc\u011f\u00fc, mahremiyetten bile daha fazlas\u0131, a\u00e7\u0131k bir toplum i\u00e7in esast\u0131r; hi\u00e7bir konu\u015fmay\u0131 k\u0131s\u0131tlamamaya \u00e7al\u0131\u015f\u0131yoruz. Ayn\u0131 forumda bir\u00e7ok taraf birlikte konu\u015fursa, her biri di\u011ferleriyle konu\u015fabilir ve bireyler ve di\u011fer taraflar hakk\u0131ndaki bilgileri bir araya toplayabilir. Elektronik ileti\u015fimin g\u00fcc\u00fc bu t\u00fcr grup konu\u015fmalar\u0131n\u0131 m\u00fcmk\u00fcn k\u0131lm\u0131\u015ft\u0131r ve sadece biz isteyebilece\u011fimiz i\u00e7in ortadan kalkmayacakt\u0131r.</p> <p>Gizlili\u011fi arzulad\u0131\u011f\u0131m\u0131z i\u00e7in, bir i\u015flemin her bir taraf\u0131n\u0131n yaln\u0131zca o i\u015flem i\u00e7in do\u011frudan gerekli olan\u0131 bilmesini sa\u011flamal\u0131y\u0131z. Herhangi bir bilgi konu\u015fulabilece\u011finden, m\u00fcmk\u00fcn oldu\u011funca az a\u00e7\u0131klama yapt\u0131\u011f\u0131m\u0131zdan emin olmal\u0131y\u0131z. \u00c7o\u011fu durumda ki\u015fisel kimlik belirgin de\u011fildir. Bir ma\u011fazadan bir dergi sat\u0131n ald\u0131\u011f\u0131mda ve katiyere nakit verdi\u011fimde, kim oldu\u011fumu bilmeme gerek yok. Elektronik posta sa\u011flay\u0131c\u0131mdan mesaj g\u00f6nderip almas\u0131n\u0131 istedi\u011fimde, sa\u011flay\u0131c\u0131m\u0131n kiminle konu\u015ftu\u011fumu, ne s\u00f6yledi\u011fimi veya ba\u015fkalar\u0131n\u0131n bana ne s\u00f6yledi\u011fini bilmesine gerek yoktur; sa\u011flay\u0131c\u0131m\u0131n sadece mesaj\u0131 oraya nas\u0131l ula\u015ft\u0131raca\u011f\u0131n\u0131 ve onlara ne kadar \u00fccret bor\u00e7lu oldu\u011fumu bilmesi gerekiyor. Kimli\u011fim i\u015flemin alt\u0131nda yatan mekanizma taraf\u0131ndan if\u015fa edildi\u011finde, mahremiyetim yok. Burada se\u00e7ici olarak kendimi if\u015fa edemem; her zaman yapmal\u0131y\u0131m kendimi if\u015fa et.</p> <p>Bu nedenle, a\u00e7\u0131k bir toplumda mahremiyet, anonim i\u015flem sistemleri gerektirir. \u015eimdiye kadar, nakit bu t\u00fcr birincil sistem olmu\u015ftur. Anonim bir i\u015flem sistemi, gizli bir i\u015flem sistemi de\u011fildir. Anonim bir sistem, bireylere kimliklerini istendi\u011finde ve yaln\u0131zca istendi\u011finde if\u015fa etme yetkisi verir; mahremiyetin \u00f6z\u00fc budur.</p> <p>A\u00e7\u0131k bir toplumda gizlilik de kriptografi gerektirir. Bir \u015fey s\u00f6ylersem, sadece niyet etti\u011fim ki\u015filer taraf\u0131ndan duyulmas\u0131n\u0131 isterim. Konu\u015fmam\u0131n i\u00e7eri\u011fi d\u00fcnyaya a\u00e7\u0131ksa, mahremiyetim yok. \u015eifrelemek, mahremiyet arzusunu belirtmektir ve zay\u0131f \u015fifreleme ile \u015fifrelemek, mahremiyet i\u00e7in \u00e7ok fazla arzu olmad\u0131\u011f\u0131n\u0131 belirtmektir. Ayr\u0131ca, varsay\u0131lan anonimlik oldu\u011funda, ki\u015finin kimli\u011fini g\u00fcvence ile ortaya \u00e7\u0131karmak i\u00e7in kriptografik imza gerekir.</p> <p>H\u00fck\u00fcmetlerin, \u015firketlerin veya di\u011fer b\u00fcy\u00fck, kimli\u011fi belirsiz kurulu\u015flar\u0131n, kendi yararlar\u0131 d\u0131\u015f\u0131nda bize mahremiyet vermelerini bekleyemeyiz. Bizim hakk\u0131m\u0131zda konu\u015fmak onlar\u0131n yarar\u0131nad\u0131r ve konu\u015fmalar\u0131n\u0131 beklemeliyiz. Konu\u015fmalar\u0131n\u0131 engellemeye \u00e7al\u0131\u015fmak, bilgi ger\u00e7ekleriyle sava\u015fmakt\u0131r. Bilgi sadece \u00f6zg\u00fcr olmak istemez, \u00f6zg\u00fcr olmay\u0131 arzular. Bilgi, mevcut depolama alan\u0131n\u0131 dolduracak \u015fekilde geni\u015fler. Bilgi, Rumor'un daha gen\u00e7, daha g\u00fc\u00e7l\u00fc kuzenidir; Bilgi, daha h\u0131zl\u0131d\u0131r, daha fazla g\u00f6ze sahiptir, daha fazlas\u0131n\u0131 bilir ve S\u00f6ylentiden daha az anlar.</p> <p>Herhangi bir mahremiyete sahip olmay\u0131 umuyorsak, kendi mahremiyetimizi savunmal\u0131y\u0131z. Bir araya gelmeli ve anonim i\u015flemlerin ger\u00e7ekle\u015fmesine izin veren sistemler olu\u015fturmal\u0131y\u0131z. \u0130nsanlar y\u00fczy\u0131llard\u0131r f\u0131s\u0131lt\u0131lar, karanl\u0131k, zarflar, kapal\u0131 kap\u0131lar, gizli tokala\u015fmalar ve kuryelerle kendi mahremiyetlerini savunuyorlar. Ge\u00e7mi\u015fin teknolojileri g\u00fc\u00e7l\u00fc bir mahremiyete izin vermiyordu, ancak elektronik teknolojiler izin veriyor.</p> <p>Biz Cypherpunk'lar, kendimizi anonim sistemler olu\u015fturmaya adad\u0131k. Gizlili\u011fimizi kriptografi, anonim posta y\u00f6nlendirme sistemleri, dijital imzalar ve elektronik para ile koruyoruz.</p> <p>Cypherpunk'lar kod yazar. Birinin mahremiyeti savunmak i\u00e7in yaz\u0131l\u0131m yazmas\u0131 gerekti\u011fini biliyoruz ve hepimiz bunu yapmad\u0131k\u00e7a mahremiyet elde edemeyece\u011fimiz i\u00e7in yazaca\u011f\u0131z. Kodumuzu Cypherpunk arkada\u015flar\u0131m\u0131z\u0131n pratik yap\u0131p onunla oynayabilmeleri i\u00e7in yay\u0131nl\u0131yoruz. Kodumuz, d\u00fcnya \u00e7ap\u0131nda herkesin kullan\u0131m\u0131 i\u00e7in \u00fccretsizdir. Yazd\u0131\u011f\u0131m\u0131z yaz\u0131l\u0131m\u0131 onaylamaman\u0131z pek umurumuzda de\u011fil. Yaz\u0131l\u0131m\u0131n yok edilemeyece\u011fini ve geni\u015f bir alana yay\u0131lm\u0131\u015f bir sistemin kapat\u0131lamayaca\u011f\u0131n\u0131 biliyoruz.</p> <p>\u015eifreleme temelde \u00f6zel bir eylem oldu\u011fundan, Cypherpunk'lar kriptografi ile ilgili d\u00fczenlemelerden \u015fikayet\u00e7idir. \u015eifreleme eylemi asl\u0131nda bilgiyi kamusal alandan kald\u0131r\u0131r. Kriptografiye kar\u015f\u0131 yasalar bile ancak bir ulusun s\u0131n\u0131r\u0131na ve \u015fiddetinin koluna kadar ula\u015f\u0131r. Kriptografi ka\u00e7\u0131n\u0131lmaz olarak t\u00fcm d\u00fcnyaya ve onunla birlikte m\u00fcmk\u00fcn k\u0131ld\u0131\u011f\u0131 anonim i\u015flem sistemlerine yay\u0131lacakt\u0131r.</p> <p>Mahremiyetin yayg\u0131nla\u015fmas\u0131 i\u00e7in bir sosyal s\u00f6zle\u015fmenin par\u00e7as\u0131 olmas\u0131 gerekir. \u0130nsanlar bir araya gelmeli ve bu sistemleri ortak yarar i\u00e7in kullanmal\u0131d\u0131r. Mahremiyet ancak, ki\u015finin toplumdaki hemcinslerinin i\u015fbirli\u011fi kadar geni\u015fler. Biz Cypherpunk'lar sorular\u0131n\u0131z\u0131 ve endi\u015felerinizi ar\u0131yoruz ve kendimizi kand\u0131rmamak i\u00e7in sizi me\u015fgul edebilece\u011fimizi umuyoruz. Bununla birlikte, baz\u0131lar\u0131 hedeflerimize kat\u0131lmayabilece\u011finden, rotam\u0131zdan ayr\u0131lmayaca\u011f\u0131z.</p> <p>Cypherpunks, a\u011flar\u0131 gizlilik i\u00e7in daha g\u00fcvenli hale getirmek i\u00e7in aktif olarak \u00e7al\u0131\u015f\u0131yor. H\u0131zla birlikte ilerleyelim.</p> <p>\u0130leriye.</p> <p>Eric Hughes &lt; hughes@soda.berkeley.edu &gt; 9 Mart 1993</p>"},{"location":"helpers/","title":"One Liners","text":""},{"location":"helpers/#python","title":"Python","text":""},{"location":"helpers/#poetry","title":"Poetry","text":"<p>Here are some helpful one liners for using Poetry, a dependency manager for Python:</p> <ul> <li><code>poetry new &lt;project-name&gt;</code>: Create a new project.</li> <li><code>poetry add &lt;library&gt;</code>: Add a new library to the project.</li> <li><code>poetry remove &lt;library&gt;</code>: Remove a library from the project.</li> <li><code>poetry update &lt;library&gt;</code>: Update a library to the latest version.</li> <li><code>poetry run which python</code>: Get the path to the virtual environment's Python interpreter.</li> <li><code>poetry env list</code>: Show a list of all environments.</li> <li><code>poetry export --output requirements.txt</code>: Export dependencies to a requirements.txt file.</li> </ul>"},{"location":"helpers/#remote-connection","title":"Remote Connection","text":""},{"location":"helpers/#ssh","title":"SSH","text":"<pre><code>ssh -J mert@{servername}.ddns.net:port mert@target\n</code></pre>"},{"location":"helpers/#scp","title":"SCP","text":"<p>From Local</p> <pre><code>scp -o \"ProxyJump mert@servername.ddns.net -p {port}\" test.txt mert@target-pc:/home/mert/\n</code></pre> <p>Download File From Remote Server</p> <pre><code>scp -o \"ProxyJump mert@servername.ddns.net -p {port}\" mert@target-pc:/home/mert/ test.txt\n</code></pre>"},{"location":"helpers/#various","title":"Various","text":""},{"location":"helpers/#download-file","title":"Download File","text":"<pre><code>wget --user-agent Mozilla/4.0 'big address' -O dest_file_name\n</code></pre>"},{"location":"helpers/#rename-files","title":"Rename Files","text":"<pre><code>ls -v | cat -n | while read n f; do mv -n \"$f\" \"$n.ext\"; done\n</code></pre>"},{"location":"helpers/#extract-files","title":"Extract Files","text":"<pre><code>7za x test.7z\n</code></pre>"},{"location":"helpers/#string-slicing","title":"String Slicing","text":"<p>From Character</p> <pre><code>for f in raw_daily/*.csv; do echo  $f /dimensions_\"${f#*blocks_}\"; done\n</code></pre> <p>To Character</p> <pre><code>for f in raw_daily/*.csv; do echo  $f /dimensions_\"${f%*blocks_}\"; done\n</code></pre> <p>Random File Name</p> <pre><code>for i in *.jpg; do mv -i \"$i\" ${RANDOM}${RANDOM}.jpg; done\n</code></pre> <p>Move Files</p> <pre><code>for f in png-exports/*; do cp $f/*.png all_images; done\n</code></pre> <p>Delete Files Recursively</p> <pre><code>find e -maxdepth 10 -type f -name \".*\" -delete\n</code></pre> <p>Get Dimensions from Folder</p> <pre><code>ls -U | while read n; do identify -format \"%f,%w,%h\\n\" \"$n\"; done &gt; file_size.csv\n</code></pre>"},{"location":"helpers/#ffmpeg","title":"FFMPEG","text":"<p>MP3 \u2192 WAV</p> <pre><code>for f in *.mp3; do ffmpeg -i \"$f\" -acodec pcm_s16le -ac 1 -ar 16000 \"wav-exports/${f%.}.wav\"; done\n</code></pre> <p>FLAC\u2192 WAV</p> <pre><code>for f in *.flac; do ffmpeg -i \"$f\" \"wav-exports/${f%.}.wav\"; done\n</code></pre> <p>WAV \u2192 mp3</p> <pre><code>for f in *.*; do ffmpeg -i \"$f\" \"wav-exports/${f%.}.wav\"; done`\n</code></pre> <pre><code>for f in *; do ffmpeg -i \"${f}\" -vn -ab 128k -ar 44100 -y \"${f}.mp3\" ; done\n</code></pre> <p>PNG Sequence \u2192 MP4</p> <pre><code>ffmpeg -f image2 -r 30 -i image_%6d.png -vcodec libx264 -crf 18  -pix_fmt yuv420p output.mp4\n</code></pre> <p>MP4 \u2192 PNG</p> <pre><code>ffmpeg -i test.mp4 -vf fps=1/2  png-exports/video13_%06d.png`\n</code></pre> <pre><code>for f in *.mp4; do ffmpeg -i \"$f\" -vf fps=2 png-exports/${f%.*}_%06d.png; done\n</code></pre> <p>MOV to Optimized GIF</p> <pre><code>ffmpeg -i test.mov -vf scale=320:-1 -r 10 output/ffout%3d.png`\n</code></pre> <pre><code>convert -delay 8 -loop 0 output/ffout*.png output/test.gif\n</code></pre>"},{"location":"helpers/#image","title":"Image","text":"<p>Convert all images in directory</p> <pre><code>mogrify -format png *.*\n</code></pre> <p>ESRGAN</p> <pre><code>python inference_realesrgan.py -n RealESRGAN_x4plus -i v13 -s 3 --suffix 8k -t 1500 -o v13_out\n</code></pre>"},{"location":"helpers/#utilities","title":"Utilities","text":"<p>Delete all hidden Mac junk files in Windows (Like .DS_STORE)</p> <pre><code>del /s /q /f /a .DS_STORE`\n</code></pre> <pre><code>del /s /q /f /a ._.*`\n</code></pre>"},{"location":"instagram/","title":"Instagram Unfollowers","text":"<p>Bu harika github projesiyle instagramdaki sizi geri takip etmeyen kisileri bulabilir ve kolayca takipten cikabilirsiniz.</p> <p>Bu projeye davidarroyo1234'nun bu github reposundan ulasabilirsiniz.</p>"},{"location":"instagram/#asagidaki-kodu-kopyalayin","title":"Asagidaki kodu kopyalayin","text":"<pre><code>\"use strict\";const INSTAGRAM_HOSTNAME=\"www.instagram.com\";let nonFollowersList=[],userIdsToUnfollow=[],isActiveProcess=!1;function sleep(e){return new Promise((n=&gt;{setTimeout(n,e)}))}function getCookie(e){const n=`; ${document.cookie}`.split(`; ${e}=`);if(2===n.length)return n.pop().split(\";\").shift()}function afterUrlGenerator(e){return`https://www.instagram.com/graphql/query/?query_hash=3dec7e2c57367ef3da3d987d89f9dbc8&amp;variables={\"id\":\"${getCookie(\"ds_user_id\")}\",\"include_reel\":\"true\",\"fetch_mutual\":\"false\",\"first\":\"24\",\"after\":\"${e}\"}`}function unfollowUserUrlGenerator(e){return`https://www.instagram.com/web/friendships/${e}/unfollow/`}function getElementByClass(e){const n=document.querySelector(e);if(null===n)throw new Error(`Unable to find element by class: ${e}`);return n}function getUserById(e){const n=nonFollowersList.find((n=&gt;n.id.toString()===e.toString()));return void 0===n&amp;&amp;console.error(`Unable to find user by id: ${e}`),n}function copyListToClipboard(){const e=[...nonFollowersList].sort(((e,n)=&gt;e.username&gt;n.username?1:-1));let n=\"\";e.forEach((e=&gt;{n+=e.username+\"\\n\"})),copyToClipboard(n)}async function copyToClipboard(e){await navigator.clipboard.writeText(e),alert(\"List copied to clipboard!\")}function onToggleUser(){getElementByClass(\".selected-user-count\").innerHTML=`[${userIdsToUnfollow.length}]`}function toggleUser(e){userIdsToUnfollow=-1===userIdsToUnfollow.indexOf(e)?[...userIdsToUnfollow,e]:userIdsToUnfollow.filter((n=&gt;n!==e)),onToggleUser()}function toggleAllUsers(e=!1){document.querySelectorAll(\".account-checkbox\").forEach((n=&gt;n.checked=e)),userIdsToUnfollow=e?nonFollowersList.map((e=&gt;e.id)):[],onToggleUser()}function renderResults(e){const n=[...e].sort(((e,n)=&gt;e.username&gt;n.username?1:-1));getElementByClass(\".toggle-all-checkbox\").disabled=!1;const t=getElementByClass(\".results-container\");t.innerHTML=\"\";let o=\"\";n.forEach((e=&gt;{const n=-1!==userIdsToUnfollow.indexOf(parseInt(e.id,10)),r=e.username.substring(0,1).toUpperCase();o!==r&amp;&amp;(o=r,t.innerHTML+=`&lt;div class='alphabet-character'&gt;${o}&lt;/div&gt;`),t.innerHTML+=`&lt;label class='result-item'&gt;\\n            &lt;div class='flex grow align-center'&gt;\\n                &lt;img class='avatar' src=${e.profile_pic_url} /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;\\n                &lt;div class='flex column'&gt;\\n                    &lt;a class='fs-xlarge' target='_blank' href='../${e.username}'&gt;${e.username}&lt;/a&gt;\\n                    &lt;span class='fs-medium'&gt;${e.full_name}&lt;/span&gt;\\n                &lt;/div&gt;\\n                ${e.is_verified?\"&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;div class='verified-badge'&gt;\u2714&lt;/div&gt;\":\"\"}\\n                ${e.is_private?\"&lt;div class='flex justify-center w-100'&gt;\\n                            &lt;span class='private-indicator'&gt;Private&lt;/span&gt;\\n                          &lt;/div&gt;\":\"\"}\\n            &lt;/div&gt;\\n            &lt;input\\n                class='account-checkbox'\\n                type='checkbox'\\n                onchange='toggleUser(${e.id})'\\n                ${n?\"checked\":\"\"} /&gt;\\n        &lt;/label&gt;`}))}async function run(e){getElementByClass(\".run-scan\").remove(),getElementByClass(\".include-verified-checkbox\").disabled=!0,nonFollowersList=await getNonFollowersList(e),getElementByClass(\".copy-list\").disabled=!1}function renderOverlay(){let e=!0;document.body.innerHTML=`\\n        &lt;main class='iu'&gt;\\n            &lt;div class='overlay'&gt;\\n                &lt;header class='top-bar'&gt;\\n                    &lt;div class='logo' onclick='location.reload()'&gt;InstagramUnfollowers&lt;/div&gt;\\n                    &lt;label class='flex align-center'&gt;\\n                        &lt;input type='checkbox' class='include-verified-checkbox' ${e?\"checked\":\"\"} /&gt; Include verified\\n                    &lt;/label&gt;\\n                    &lt;button class='copy-list' onclick='copyListToClipboard()' disabled&gt;COPY LIST&lt;/button&gt;\\n                    &lt;button class='fs-large clr-red' onclick='unfollow()'&gt;UNFOLLOW &lt;span class='selected-user-count'&gt;[0]&lt;/span&gt;&lt;/button&gt;\\n                    &lt;input type='checkbox' class='toggle-all-checkbox' onclick='toggleAllUsers(this.checked)' disabled /&gt;\\n                &lt;/header&gt;\\n\\n                &lt;button class='run-scan'&gt;RUN&lt;/button&gt;\\n                &lt;div class='results-container'&gt;&lt;/div&gt;\\n\\n                &lt;footer class='bottom-bar'&gt;\\n                    &lt;div&gt;Non-followers: &lt;span class='nonfollower-count' /&gt;&lt;/div&gt;\\n                    &lt;div class='sleeping-text'&gt;&lt;/div&gt;\\n                    &lt;div class='progressbar-container'&gt;\\n                        &lt;div class='progressbar-bar'&gt;&lt;/div&gt;\\n                        &lt;span class='progressbar-text'&gt;0%&lt;/span&gt;\\n                    &lt;/div&gt;\\n                &lt;/footer&gt;\\n            &lt;/div&gt;\\n        &lt;/main&gt;`,getElementByClass(\".run-scan\").addEventListener(\"click\",(()=&gt;run(e))),getElementByClass(\".include-verified-checkbox\").addEventListener(\"change\",(()=&gt;e=!e))}async function getNonFollowersList(e=!0){if(isActiveProcess)return;let n=[],t=!0,o=0,r=0,s=-1;isActiveProcess=!0;let l=`https://www.instagram.com/graphql/query/?query_hash=3dec7e2c57367ef3da3d987d89f9dbc8&amp;variables={\"id\":\"${getCookie(\"ds_user_id\")}\",\"include_reel\":\"true\",\"fetch_mutual\":\"false\",\"first\":\"24\"}`;const i=getElementByClass(\".progressbar-bar\"),a=getElementByClass(\".progressbar-text\"),c=getElementByClass(\".nonfollower-count\"),d=getElementByClass(\".sleeping-text\");for(;t;){let u;try{u=await fetch(l).then((e=&gt;e.json()))}catch(e){console.error(e);continue}-1===s&amp;&amp;(s=u.data.user.edge_follow.count),t=u.data.user.edge_follow.page_info.has_next_page,l=afterUrlGenerator(u.data.user.edge_follow.page_info.end_cursor),r+=u.data.user.edge_follow.edges.length,u.data.user.edge_follow.edges.forEach((t=&gt;{!e&amp;&amp;t.node.is_verified||t.node.follows_viewer||n.push(t.node)}));const f=`${Math.ceil(r/s*100)}%`;a.innerHTML=f,i.style.width=f,c.innerHTML=n.length.toString(),renderResults(n),await sleep(Math.floor(400*Math.random())+1e3),o++,o&gt;6&amp;&amp;(o=0,d.style.display=\"block\",d.innerHTML=\"Sleeping 10 secs to prevent getting temp blocked...\",await sleep(1e4)),d.style.display=\"none\"}return i.style.backgroundColor=\"#59A942\",a.innerHTML=\"DONE\",isActiveProcess=!1,n}async function unfollow(){if(isActiveProcess)return;if(0===userIdsToUnfollow.length)return void alert(\"Must select at least a single user to unfollow\");if(!confirm(\"Are you sure?\"))return;let e=getCookie(\"csrftoken\");if(void 0===e)throw new Error(\"csrftoken cookie is undefined\");const n=getElementByClass(\".sleeping-text\"),t=getElementByClass(\".progressbar-bar\"),o=getElementByClass(\".progressbar-text\");getElementByClass(\".toggle-all-checkbox\").disabled=!0;const r=getElementByClass(\".results-container\");r.innerHTML=\"\";const s=()=&gt;window.scrollTo(0,r.scrollHeight);o.innerHTML=\"0%\",t.style.width=\"0%\",isActiveProcess=!0;let l=0;for(const i of userIdsToUnfollow){const a=getUserById(i);try{await fetch(unfollowUserUrlGenerator(i),{headers:{\"content-type\":\"application/x-www-form-urlencoded\",\"x-csrftoken\":e},method:\"POST\",mode:\"cors\",credentials:\"include\"}),r.innerHTML+=`&lt;div class='p-medium'&gt;Unfollowed\\n                &lt;a class='clr-inherit' target='_blank' href='${a.username}'&gt; ${a.username}&lt;/a&gt;\\n                &lt;span class='clr-cyan'&gt; [${l+1}/${userIdsToUnfollow.length}]&lt;/span&gt;\\n            &lt;/div&gt;`}catch(e){console.error(e),r.innerHTML+=`&lt;div class='p-medium clr-red'&gt;Failed to unfollow ${a.username} [${l+1}/${userIdsToUnfollow.length}]&lt;/div&gt;`}l+=1;const c=`${Math.ceil(l/userIdsToUnfollow.length*100)}%`;if(o.innerHTML=c,t.style.width=c,s(),i===userIdsToUnfollow[userIdsToUnfollow.length-1])break;await sleep(Math.floor(2e3*Math.random())+4e3),l%5==0&amp;&amp;(n.style.display=\"block\",n.innerHTML=\"Sleeping 5 minutes to prevent getting temp blocked...\",s(),await sleep(3e5)),n.style.display=\"none\"}t.style.backgroundColor=\"#59A942\",o.innerHTML=\"DONE\",isActiveProcess=!1,r.innerHTML+=\"&lt;hr /&gt;&lt;div class='fs-large p-medium clr-green'&gt;All DONE!&lt;/div&gt;&lt;hr /&gt;\",s()}function init(){location.hostname===INSTAGRAM_HOSTNAME?(document.title=\"InstagramUnfollowers\",renderOverlay()):alert(\"Can be used only on Instagram routes\")}window.addEventListener(\"beforeunload\",(e=&gt;{if(isActiveProcess)return(e=e||window.event)&amp;&amp;(e.returnValue=\"Changes you made may not be saved.\"),\"Changes you made may not be saved.\"})),init();const styleMarkup=\"html {\\n  background-color: #222 !important; }\\n  html .iu {\\n    margin-bottom: 10rem; }\\n    html .iu .overlay {\\n      background-color: #222;\\n      color: #fff;\\n      height: 100%;\\n      font-family: system-ui; }\\n    html .iu header.top-bar {\\n      position: fixed;\\n      top: 0;\\n      left: 0;\\n      right: 0;\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      padding: 1rem;\\n      height: 2.5rem;\\n      background-color: #333;\\n      z-index: 1; }\\n    html .iu header .logo {\\n      font-family: monospace;\\n      font-size: 1.5em;\\n      cursor: pointer; }\\n    html .iu footer.bottom-bar {\\n      position: fixed;\\n      bottom: 0;\\n      left: 0px;\\n      right: 0px;\\n      display: flex;\\n      align-items: center;\\n      justify-content: space-between;\\n      padding: 1rem;\\n      background-color: #000;\\n      font-weight: bold;\\n      z-index: 1; }\\n    html .iu label {\\n      cursor: pointer; }\\n    html .iu input[type='checkbox'] {\\n      height: 1.1rem;\\n      width: 1.1rem; }\\n    html .iu a {\\n      color: inherit;\\n      text-decoration-color: transparent;\\n      transition: text-decoration-color 0.1s; }\\n      html .iu a:hover {\\n        text-decoration-color: inherit; }\\n    html .iu button {\\n      background: none;\\n      border: none;\\n      padding: 0;\\n      cursor: pointer; }\\n      html .iu button.copy-list {\\n        color: white;\\n        font-size: 1rem; }\\n      html .iu button.run-scan {\\n        position: absolute;\\n        left: 50%;\\n        top: 50%;\\n        transform: translate(-50%, -50%);\\n        font-size: 2em;\\n        color: white;\\n        border: 1px solid white;\\n        height: 160px;\\n        width: 160px;\\n        border-radius: 50%; }\\n    html .iu .progressbar-container {\\n      width: 175px;\\n      height: 30px;\\n      border-radius: 5px;\\n      position: relative;\\n      border: 1px solid #7b7777; }\\n    html .iu .progressbar-bar {\\n      width: 0;\\n      height: 100%;\\n      background-color: #7b7777; }\\n    html .iu .progressbar-text {\\n      position: absolute;\\n      top: 50%;\\n      left: 50%;\\n      transform: translate(-50%, -50%); }\\n    html .iu .sleeping-text {\\n      color: yellow; }\\n    html .iu .results-container {\\n      transform: translateY(75px); }\\n      html .iu .results-container .alphabet-character {\\n        margin: 1rem;\\n        padding: 1rem;\\n        font-size: 2em;\\n        border-bottom: 1px solid #333; }\\n      html .iu .results-container .result-item {\\n        display: flex;\\n        align-items: center;\\n        padding: 1rem;\\n        border-radius: 3px;\\n        cursor: pointer; }\\n        html .iu .results-container .result-item .avatar {\\n          width: 75px;\\n          border-radius: 50%; }\\n        html .iu .results-container .result-item .verified-badge {\\n          background-color: #49adf4;\\n          border-radius: 50%;\\n          padding: 0.2rem 0.3rem;\\n          font-size: 0.45em;\\n          height: fit-content;\\n          transform: translateY(-15px); }\\n        html .iu .results-container .result-item .private-indicator {\\n          border: 2px solid #51bb42;\\n          border-radius: 25px;\\n          padding: 0.5rem;\\n          color: #51bb42;\\n          font-weight: 500; }\\n\\n/** HELPERS */\\n.flex {\\n  display: flex; }\\n  .flex.align-center {\\n    align-items: center; }\\n  .flex.justify-center {\\n    justify-content: center; }\\n  .flex.column {\\n    flex-direction: column; }\\n\\n.grow {\\n  flex: 1; }\\n\\n.w-100 {\\n  width: 100%; }\\n\\n.p-small {\\n  padding: 0.5rem; }\\n\\n.p-medium {\\n  padding: 1rem; }\\n\\n.p-large {\\n  padding: 1.5rem; }\\n\\n.p-xlarge {\\n  padding: 2rem; }\\n\\n.fs-small {\\n  font-size: 0.5rem; }\\n\\n.fs-medium {\\n  font-size: 1rem; }\\n\\n.fs-large {\\n  font-size: 1.5rem; }\\n\\n.fs-xlarge {\\n  font-size: 2rem; }\\n\\n.clr-inherit {\\n  color: inherit; }\\n\\n.clr-red {\\n  color: #bd2121; }\\n\\n.clr-green {\\n  color: #56d756; }\\n\\n.clr-cyan {\\n  color: #00ffff; }\\n\",elStyle=document.createElement(\"style\");elStyle.innerHTML=styleMarkup,document.head.appendChild(elStyle);\n</code></pre>"},{"location":"instagram/#instagram-hesabiniza-girin-ve-developer-consoleu-acin","title":"Instagram hesabiniza girin ve developer console'u acin","text":"<pre><code>Windows: Ctrl+Shift+J\nMacOS: \u2318+\u2325+I\n</code></pre>"},{"location":"instagram/#kodu-consolea-yapistirip-calistirin","title":"Kodu Console'a yapistirip calistirin","text":""},{"location":"instagram/#soyle-bir-ekran-karsilayacak","title":"Soyle bir ekran karsilayacak","text":"<p>Calistirin ve takipten cikmak istediginiz kullanicilari tikleyip calistirin.</p> <p></p>"},{"location":"nerf/","title":"NeRF Docker Setup","text":""},{"location":"nerf/#prerequisites","title":"Prerequisites","text":"<ol> <li>Docker</li> <li>Latest nvidia drivers</li> <li>CUDA 11.8 capable GPU</li> </ol>"},{"location":"nerf/#install","title":"Install","text":"<ol> <li>Pull latest docker image</li> </ol> <pre><code>docker pull dromni/nerfstudio:&lt;version_number&gt;\n</code></pre> <p>You can see the latest tag in this link https://hub.docker.com/r/dromni/nerfstudio/tags</p> <pre><code># example command\ndocker pull dromni/nerfstudio:0.1.19\n</code></pre> <ol> <li>Run docker image</li> </ol> <pre><code>docker run --gpus all -v /folder/of/your/data:/workspace/ -v /home/&lt;YOUR_USER&gt;/cache/:/home/user/.cache/ -p 7007:7007 --rm -it dromni/nerfstudio:0.1.13\n</code></pre> <p>Example for Windows:</p> <pre><code>docker run --gpus all -v D:\\nerf:/workspace/ -v D:\\nerf/:/home/user/.cache/ -p 7007:7007 --rm -it dromni/nerfstudio:0.1.19\n</code></pre> <pre><code>-  Give the container access to nvidia GPU (required).\n-  Mount a folder from the local machine into the container to be able to process them (required).\n-  Mount cache folder to avoid re-downloading of models everytime (recommended).\n-  Map port from local machine to docker container (required to access the web interface UI).\n-  Remove container after it is closed (recommended).\n-  Start container in interactive mode.\n-  Docker image name\n</code></pre>"},{"location":"nerf/#training-first-model","title":"Training First Model","text":""},{"location":"nerf/#dont-forget-to-change-the-directory","title":"Don't forget to change the directory","text":"<pre><code>cd /workspace\n</code></pre> <p>Be sure to do everything you do after this point in the <code>/workspace</code> directory.</p>"},{"location":"nerf/#start-training","title":"Start Training","text":"<pre><code>ns-download-data nerfstudio --capture-name=poster\n</code></pre> <p>Because this code is often used too much, google drive can put a download restriction, read the error message and try to download the file in the link with your browser.</p> <p>There are also different dataset you can use, to show them run this code</p> <pre><code>ns-download-data nerfstudio --help\n</code></pre> <pre><code>bww_entrance, campanile, desolation, library, \nposter, redwoods2, storefront, vegetation, Egypt, \nperson, kitchen, plane, dozer, floating-tree, aspen, \nstump, sculpture, Giannini-Hall, all, nerfstudio-dataset\n</code></pre> <p>After select one of the dataset you can download as well with following command</p> <pre><code>ns-download-data nerfstudio --capture-name=bmw_entrance\n</code></pre> <p>You will see all the downloaded datasets in this directory <code>D:\\nerf\\data\\nerfstudio</code></p>"},{"location":"nerf/#explore-nerf-studio","title":"Explore NeRF Studio","text":"<p>Start training with the following command, you will need change the datapath to your dataset folder</p> <pre><code>ns-train nerfacto --data data/nerfstudio/poster\n</code></pre> <p>or</p> <pre><code>ns-train nerfacto --data data/nerfstudio/bww_entrance\n</code></pre> <p>If everything is correct, ideal output would be like this.</p> <p></p> <p>A web page similar to the link below will appear on your terminal screen, open this page and continue.</p> <pre><code>https://viewer.nerf.studio/versions/22-12-02-0/?websocket_url=ws://localhost:7007 \n</code></pre>"},{"location":"nerf/#resume-stop-training","title":"Resume &amp; Stop Training","text":"<p>You can stop the training with the <code>Ctrl + c</code> shortcut.</p> <p>If you want to continue the training from where it left off, run the code below.</p> <pre><code>ns-train nerfacto --data data/nerfstudio/poster --load-dir {outputs/.../nerfstudio_models}\n</code></pre> <p>Example code</p> <pre><code>ns-train nerfacto --data data/nerfstudio/bww_entrance/ --load-dir outputs/bww_entrance/nerfacto/2023-03-14_183456/nerfstudio_models/\n</code></pre>"},{"location":"nerf/#visualize-only-without-training","title":"Visualize Only (without training)","text":"<pre><code>ns-viewer --load-config {outputs/.../config.yml}\n</code></pre> <pre><code># example code\nns-viewer --load-config outputs/bww_entrance/nerfacto/2023-03-14_183456/config.yml\n</code></pre>"},{"location":"nerf/#training-on-custom-data","title":"Training on Custom Data","text":"<p>Put your files in the main directory of the volume you opened, you can also keep them in a folder in the main directory.</p> <pre><code>ns-process-data {video,images,polycam,insta360,record3d} --data {DATA_PATH} --output-dir {PROCESSED_DATA_DIR}\n</code></pre> <pre><code># example code\nns-process-data video --data raw_video/forest_walk.mp4 --output-dir forest_walk_processed\n</code></pre> <p>Arguments:</p> <pre><code>ns-process-data images [-h] --data PATH --output-dir PATH\n                       [--camera-type {perspective,fisheye}]\n                       [--matching-method {exhaustive,sequential,vocab_tree}]\n                       [--sfm-tool {any,colmap,hloc}]\n                       [--feature-type \n{any,sift,superpoint,superpoint_aachen,superpoint_max,superpoint_inloc,r2d2,d2\nnet-ss,sosnet,disk}]\n                       [--matcher-type \n{any,NN,superglue,superglue-fast,NN-superpoint,NN-ratio,NN-mutual,adalam}]\n                       [--num-downscales INT] [--skip-colmap]\n                       [--colmap-cmd STR] [--no-gpu] [--verbose]\n</code></pre> <pre><code>ns-train nerfacto --data {PROCESSED_DATA_DIR}\n</code></pre> <pre><code># example code\nns-train nerfacto --data forest_walk_processed/\n</code></pre>"},{"location":"nerf/#example","title":"Example","text":"<p>It points to the same place in the following two paths. one its location on the host and the other its location inside the container.</p> <p>Raw File Path:</p> <ul> <li><code>D:\\nerf\\raw_data\\IMG_6070.MOV</code></li> <li><code>/workspace/raw_data/IMG_6070.MOV</code></li> </ul> <p>Target Folder Path:</p> <ul> <li><code>D:\\nerf\\outputs\\test_video</code></li> <li><code>/workspace/outputs/bank</code></li> </ul> <p>Preparing</p> <pre><code>ns-process-data video --data /workspace/raw_data/IMG_6070.MOV --output-dir /workspace/outputs/bank\n</code></pre> <p>Training</p> <pre><code>ns-train nerfacto --data outputs/bank\n</code></pre>"},{"location":"nerf/#kiri-engine","title":"KIRI Engine","text":"<p>Coming soon...</p>"},{"location":"new-macbook/","title":"New Macbook Installation","text":""},{"location":"new-macbook/#install-xcode","title":"Install XCode","text":"<pre><code>sudo xcode-select --install\n</code></pre>"},{"location":"new-macbook/#install-brew","title":"Install Brew.","text":"<pre><code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n</code></pre>"},{"location":"new-macbook/#brew-services","title":"Brew Services","text":"<pre><code>brew install tree wget vim fig git htop imagemagick ffmpeg tmux\n</code></pre> <pre><code>brew install --cask iterm2 visual-studio-code\n</code></pre>"},{"location":"new-macbook/#install-zsh","title":"Install ZSH.","text":"<pre><code>sudo apt install zsh-autosuggestions zsh-syntax-highlighting zsh\n</code></pre>"},{"location":"new-macbook/#install-oh-my-zsh","title":"Install Oh my ZSH.","text":"<pre><code>sh -c \"$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\"\n</code></pre>"},{"location":"new-macbook/#iterm2-settings","title":"iTerm2 Settings","text":"<p>Preferences &gt; Profiles &gt; Keys &gt; Presets &gt; Natural Text Editing</p>"},{"location":"new-macbook/#install-python-dev-environment","title":"Install Python Dev Environment","text":"<p>Install Anaconda</p> <pre><code>curl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh\nsh Miniconda3-latest-MacOSX-arm64.sh\n</code></pre> <p>Initialize on Terminal if needed</p> <pre><code>conda init\nsource ~/.zshrc\n</code></pre> <p>Install popular libraries</p> <pre><code>python -m pip install --upgrade pip\npip install pandas numpy matplotlib seaborn scikit-learn requests\n</code></pre>"},{"location":"new-macbook/#pytorch-env","title":"PyTorch Env","text":"<p>Create environment for PyTorch</p> <pre><code>conda create --name torchenv python=3.9\nactivate torchenv\n</code></pre> <p>Install Dependencies</p> <pre><code>brew install gcc\n\nconda install astunparse numpy ninja pyyaml setuptools cmake cffi typing_extensions future six requests dataclasses\nconda install pkg-config libuv\n</code></pre> <p>MPS acceleration is available on MacOS 12.3+</p> <pre><code>conda install pytorch torchvision torchaudio -c pytorch-nightly\n</code></pre> <p>if you get error</p> <pre><code>conda install pytorch -c pytorch-nightly\npip install --pre torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/nightly/cpu\n</code></pre> <p>Check if everyting is okay</p> <pre><code>python\nimport torch; torch.backends.mps.is_available()\n# True\n</code></pre>"},{"location":"portfolio/","title":"Hey","text":""},{"location":"portfolio/#cobanov","title":"Cobanov","text":""},{"location":"portfolio/#chrome","title":"Chrome","text":""},{"location":"portfolio/#little-girls","title":"Little Girls","text":""},{"location":"portfolio/#women","title":"Women","text":""},{"location":"portfolio/#cartoon","title":"Cartoon","text":""},{"location":"portfolio/#concept-art","title":"Concept Art","text":""},{"location":"portfolio/#cosmic-people","title":"Cosmic People","text":""},{"location":"portfolio/#line-art","title":"Line-art","text":""},{"location":"portfolio/#wlop","title":"WLOP","text":""},{"location":"portfolio/#coral-glacier","title":"Coral &amp; Glacier","text":""},{"location":"python-conf/","title":"Doing Python Configuration Right","text":"<p>Source: https://whalesalad.com/blog/doing-python-configuration-right</p>"},{"location":"python-conf/#doing-python-configuration-right","title":"Doing Python Configuration Right","text":"<p>Let's talk about configuring Python applications, specifically the kind that might live in multiple environments \u2013 dev, stage, production, etc...</p> <p>The tools and frameworks used in the application are not super important because the approach that I will outline below is based on vanilla Python. The impetus for this approach was caused by frustration with Django's settings, but this is my go-to for any kind of Python application I might be working on.</p>"},{"location":"python-conf/#recap-python-modules-packages","title":"Recap: Python Modules &amp; Packages","text":"<p>One of my favorite Python features is the way that the files and directories your application is made of map one-to-one with how you import and use them in code.</p> <p>For example, given this import statement:</p> <pre><code>from app.utils import numbers\n\n</code></pre> <p>We can infer the following directory structure:</p> <pre><code>app\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 database.py\n\u251c\u2500\u2500 services.py\n\u251c\u2500\u2500 ...\n\u2514\u2500\u2500 utils\n    \u251c\u2500\u2500 __init__.py\n    \u2514\u2500\u2500 numbers.py\n\n</code></pre> <p>Lots of languages and frameworks rely on this novel concept, including Clojure and ES6.</p> <p>In our example, Python considers the <code>utils</code> directory a Package. A directory becomes a package as soon as you place an empty <code>__init__.py</code> inside of it.</p> <p>A common scenario you might encounter as a Python hacker is one where you have a <code>utils.py</code> file that eventually gets too large, so you break it out into a <code>utils/</code> directory containing many smaller files.</p> <p>When met with this situation we might do the following:</p> <pre><code># Create a new package:\nmkdir utils &amp;&amp; touch utils/__init__.py\n\n# Move our existing code into the new package\nmv utils.py utils/something.py\n\n</code></pre> <p>So now we've seen that a Python package is decided by the existence of an empty <code>__init__.py</code> file in a directory... but what if the file isn't empty?</p>"},{"location":"python-conf/#putting-code-in-__init__py","title":"Putting Code in __init__.py","text":"<p>Since it's just a regular old Python file, you can actually put whatever you want there and it will be executed the first time the package is imported.</p> <p>You can test this out on your own. Create a directory named <code>foo</code> and give it an empty <code>__init__.py</code> file.</p> <p>From a Python REPL in the same directory:</p> <p>Seeing no output here is good, it means the statement was successful.</p> <p>Now let's edit our <code>__init__.py</code> file to include the following code:</p> <p><code>sys.exit()</code> is typically used to cause a process to exit with a specific status.</p> <p>Rerunning the same experiment in a new REPL you will observe that your Python shell immediately exits after the import. In a larger application the effect would be more pronounced: the whole application would exit.</p> <p>So we understand the fundamentals and we've seen how this feature can be used maliciously.</p> <p>Perhaps we can use it for good?</p>"},{"location":"python-conf/#multiple-environments-twelve-factor-apps","title":"Multiple Environments &amp; Twelve-Factor Apps","text":"<p>It's likely that your application has lived in multiple environments. Your local development environment is likely the first, and you might have a test environment that lives on Jenkins or another CI platform. Your code is deployed to a production or live environment. Some systems might have a staging environment that is used just before things go live.</p> <p>Even if you only consider yourself a hobbyist, developing code locally and deploying it to a VPS or Heroku-like platform means you're dealing with multiple environments.</p> <p>A rule I follow when building applications is that I should be able to deploy a codebase \u2013 without modification \u2013 into any environment, assuming we have a way to tell the system where it's running.</p> <p>Contrast this to building multiple artifacts for each deployment target, requiring additional time and complexity to build and persist. These artifacts are typically designed to run in a single target environment, so running them locally or in a test mode is often difficult or impossible.</p> <p>The famous twelve-factor methodology shares this belief, in addition to the idea that all configuration should exist as environment variables, too. I agree with this to an extent, but there is sometimes a tendency to make everything an environment variable which quickly becomes difficult to support.</p> <p>If every knob and dial of your system is an environment variable, you'll find that you end up keeping various permutations of variables stored somewhere for running or debugging. See the problem here? We've pulled config out of one area (the code, something that is typically kept in version control) and moved them to an area that is more prone to error and human mistakes.</p> <p>The general guidelines I use to decide where to draw the line:</p> <ul> <li>Static things that don't change often, or things that dramatically influence the behavior of the system should live in the code.</li> <li>Dynamic things that change frequently, or things that should be kept secret (API keys/credentials) should live outside the code.</li> </ul>"},{"location":"python-conf/#how-do-we-switch-environments","title":"How do we Switch Environments?","text":"<p>In order for an application to change its behavior between environments we need a way to tell it where it is running. Leaning on environment variables (see a pattern?), I tend to use <code>ENV</code> (or a variation) for this purpose.</p> <ul> <li>The Ruby/Rails ecosystem uses <code>RACK_ENV</code> or <code>RAILS_ENV</code></li> <li>Javascript projects will oftentimes leverage <code>NODE_ENV</code></li> </ul> <p>I recently completed a project for a client with the following convention:</p> <ul> <li>My local development environment does not set an <code>ENV</code> variable, so the system infers <code>development</code> by default.</li> <li>The test environment on AWS CodePipeline uses <code>ENV=test</code></li> <li>The production environment on EC2 uses <code>ENV=production</code></li> </ul> <p>Note: It's important to consider the consequences of not setting this variable. Could that be catastrophic? For instance, could the app boot in DEV mode inside of a production cluster and end up showing tracebacks to the public? For some applications, the default should be production. There is no right or wrong answer here, but it needs to be considered.</p>"},{"location":"python-conf/#the-end-goal","title":"The End Goal","text":"<p>From a developer standpoint we want to access our config like so:</p> <pre><code>from service.config import AWS_S3_BUCKET\n\n</code></pre> <p>The import line above doesn't contain anything that would suggest which environment we are in. We don't see the word development or production anywhere. Instead, we just import what we need and allow the configuration system to decide where that comes from.</p> <p>We're leveraging the filesystem and the language itself to provide an API for reading configuration.</p> <p>Behind the curtain, this is what the <code>config</code> directory looks like on disk:</p> <pre><code>service/config\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 common.py\n\u2514\u2500\u2500 environments\n\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n\u00a0\u00a0 \u251c\u2500\u2500 development.py\n\u00a0\u00a0 \u251c\u2500\u2500 production.py\n\u00a0\u00a0 \u2514\u2500\u2500 staging.py\n\n</code></pre> <ul> <li><code>common.py</code> contains all of our common or shared configuration. These are things that don't significantly differ from one environment to the next. You could call this <code>base</code> or <code>shared</code> if you'd like.</li> <li><code>environments/development.py</code> contains development configuration. This file could be excluded from version control so that each developer on the team can implement his or her own configuration settings.</li> <li><code>environments/(production|staging).py</code> include configuration unique to each of their respective environments.</li> </ul> <p>Let's take a look inside <code>common.py</code>:</p> <pre><code>import os\n\nAPP_NAME = \"My Application\"\n\n# Conveniences to always have a quick reference to the\n# top-level application directory.\nROOT_DIR = os.path.join(\n    os.path.dirname(os.path.realpath(__file__)),\n    os.pardir,\n    os.pardir,\n)\nSERVICE_DIR = os.path.join(ROOT_DIR, \"service\")\n\n# Used in DNS lookup jobs.\nDEFAULT_NAMESERVERS = [\n    \"1.1.1.1\",\n    \"1.0.0.1\"\n]\n\n# Job runner behaviors\nJOB_SUPERVISOR_SLEEP_SECONDS = 1\nJOB_STATUS_TTL = 10\n\n# AWS Configuration\nAWS_DYNAMO_REGION = 'us-west-1'\nAWS_DYNAMO_TABLE_PREFIX = 'acme-'\nAWS_S3_BUCKET = 'acme-production'\n\nSYSTEM_REBOOT_COMMAND = \"sudo systemctl restart foo.service\"\n\n</code></pre> <p>This is a contrived example so don't read too deeply into the specifics. The important thing to notice is that this is fairly static configuration that is not going to change very often.</p> <p>Now let's look at <code>environment/development.py</code>:</p> <pre><code>from ..common import *\n\nAWS_DYNAMO_TABLE_PREFIX = 'acme-dev-mwhalen-'\nAWS_S3_BUCKET = 'acme-dev-mwhalen'\n\nGOOGLE_CLIENT_ID = \"XXXX\"\nGOOGLE_CLIENT_SECRET = \"XXXX\"\nGOOGLE_CLIENT_REFRESH_TOKEN = \"XXXX\"\n\n# We're inserting our own DNS servers to the front of the defaults.\nDEFAULT_NAMESERVERS = [\n    \"10.0.0.3\"\n] + DEFAULT_NAMESERVERS\n\n# This is intentionally a no-op command.\n# Our specific application is designed to be supervised by systemd,\n# but this is not available on macOS.\nSYSTEM_REBOOT_COMMAND = \"uname -a\"\n\n</code></pre> <ul> <li>We start by importing the <code>common</code> configuration so that we inherit all of the common configuration by default. Now we have the ability to add, replace or augment parameters without the need to copy-paste from the parent.</li> <li>To support local development, I can customize the AWS resources being used in my environment. The rest of the system is unchanged, but now my local system is using my own tables in Dynamo as well as my own S3 bucket.</li> <li>Because this file is not in version control I can confidently store secrets such as my own <code>GOOGLE_CLIENT_</code> credentials.</li> <li>Because there is access to the common <code>DEFAULT_NAMESERVERS</code> I have the ability extend them versus copy-pasting whatever the common values are into my own configuration.</li> <li>In production <code>systemd</code> commands are used to restart the application in response to certain admin actions. Because my Mac doesn't have <code>systemd</code>, I avoid that problem entirely by replacing the system reboot command with a simple no-op.</li> </ul>"},{"location":"python-conf/#how-it-works","title":"How it Works","text":"<p>Circling back to our <code>config/__init__.py</code> file, what could we implement here to make this possible? It's actually quite straightforward:</p> <pre><code>import os\nimport importlib\n\n# Determine the environment we want to load, default is development.py\nENV = os.environ.get(\"ENV\", \"development\")\n\nmodule = importlib.import_module(\n    f\".environments.{ENV}\", package=\"service.config\"\n)\n\n# update globals of this module (i.e. settings) with imported.\nglobals().update(vars(module))\n\n\ndef is_development_env():\n    return ENV == \"development\"\n\n\ndef is_production_env():\n    return ENV == \"production\"\n\n</code></pre> <p>We're leveraging import-time evaluation to dynamically fetch the necessary configuration from the corresponding child environment. Let's step through it piece by piece:</p> <ol> <li>First we import the <code>importlib</code> module (docs) which gives us some handy tools for importing code with code.</li> <li>Using the convention we established \u2013 the <code>ENV</code> environment variable \u2013 we grab the name of the environment we're currently running in.</li> <li> <p>We choose <code>development</code> as the default if one is not set, but as noted earlier this decision will vary depending on the system.</p> <p>We might even consider preventing our application from starting unless this variable is defined. Here is an example of how that could work:</p> <p>``` ENV = os.environ.get(\"ENV\", None) if ENV is None:     raise Exception(\"The ENV environment variable must be set!\")</p> <p>```</p> </li> <li> <p>Next we use the <code>importlib.import_module</code> function to load the module containing our specific environment's code into a local variable, <code>module</code>.</p> </li> <li>Finally, we update the globals of this module merging in the ones from the <code>development.py</code> file.</li> <li>At the end you will see a few conveniences (a-la Rails) to make it easier to toggle specific logic based on the environment. These are kept as functions so that they isolate implementation to this module instead of wherever its being used.</li> </ol> <p>This approach was heavily inspired by Ruby on Rails configuration which achieves a very similar outward appearance albeit with a different under-the-hood implementation.</p>"},{"location":"python-conf/#a-real-world-example","title":"A Real World Example","text":"<p>To provide another example of this in action, below is the configuration for this website:</p> <p>First, here is the exact directory structure of my <code>config</code> directory:</p> <pre><code>config\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 base.py\n\u2514\u2500\u2500 environments\n    \u251c\u2500\u2500 __init__.py\n    \u251c\u2500\u2500 development.py\n    \u251c\u2500\u2500 production.py\n    \u2514\u2500\u2500 test.py\n\n</code></pre> <ul> <li><code>development.py</code> is used locally</li> <li><code>production.py</code> is used on Heroku</li> <li><code>test.py</code> is used for local unit tests with pytest</li> </ul> <pre><code># config/environments/base.py\n\nimport os\nimport logging\nimport pytz\n\nLOG_FORMAT = '[%(asctime)s] [%(levelname)s] [%(name)s] %(message)s'\n\nROOT_DIR = os.path.join(\n  os.path.dirname(os.path.realpath(__file__)),\n  os.pardir,\n  os.pardir\n)\n\nSYSTEM_DIR = os.path.join(ROOT_DIR, 'system')\nBLOG_DIR = os.path.join(ROOT_DIR, 'blog')\nSASS_DIR = os.path.join(ROOT_DIR, 'static', 'sass')\n\nTZ = pytz.timezone('America/Los_Angeles')\n\ndef relative_to_root(path):\n    return os.path.abspath(os.path.join(ROOT_DIR, path))\n\nDEFAULT_SITE_TITLE = 'Michael Whalen \u2013 whalesalad.com'\n\n</code></pre> <p><code>base.py</code> contains fairly static configuration:</p> <ul> <li>A centralized log format to use elsewhere in the project.</li> <li>Common directories and a helper function to make path-related work easier.</li> <li>The timezone for my service.</li> <li>The default title to use when a page doesn't provide it's own.</li> </ul> <pre><code># config/environments/development.py\n\nimport os\n\nfrom ..base import *\n\nDEFAULT_SITE_TITLE = f'[DEV] {DEFAULT_SITE_TITLE}'\n\nREDIS = {\n    'host': os.environ.get('REDIS_HOST', 'localhost'),\n    'port': os.environ.get('REDIS_PORT', 6379),\n    'db': os.environ.get('REDIS_DB', 0),\n    'socket_timeout': 120\n}\n\n</code></pre> <p>In <code>development.py</code>, the site title is overridden so while I am editing I know I am looking at a local copy. I also define some local Redis configuration that differs greatly from Production.</p> <pre><code># config/environments/production.py\n\nimport os\n\nfrom ..base import *\n\nSENTRY_DSN = \"https://*******@sentry.io/*******\"\n\nREDIS = {\n    'url': os.environ.get('REDIS_URL')\n}\n\n</code></pre> <ul> <li><code>SENTRY_DSN</code> is only defined in <code>production.py</code> and not in the base or any other environments. This is to prevent Sentry (centralized error logs) from becoming activated in dev or test situations.</li> <li>On Heroku the Redis connection details come from a URL, so that is configured here.</li> </ul> <p>Finally, to demonstrate how this is used elsewhere in the app, take a look at how Redis connections are built:</p> <pre><code>from redis import ConnectionPool\nfrom redis import Redis as R\n\nfrom system import config\n\n\nclass RedisManager(object):\n    @classmethod\n    def from_config(cls, redis_config):\n        if 'url' in redis_config:\n            pool = ConnectionPool.from_url(redis_config['url'])\n        else:\n            pool = ConnectionPool(**redis_config)\n\n        return cls(connection_pool=pool)\n\n    def __init__(self, connection_pool):\n        self.pool = connection_pool\n\n    def get_connection(self):\n        return R(connection_pool=self.pool)\n\n    conn = property(get_connection)\n\n\nRedis = RedisManager.from_config(config.REDIS)\n\n</code></pre> <p>Notice the last line: <code>RedisManager.from_config()</code> is used to isolate concerns. The rest of <code>RedisManager</code> doesn't know what the shape of the data in <code>config</code> looks like and shouldn't have to. This is one of the handoff points between the configuration layer and the rest of the system.</p>"},{"location":"python-conf/#closing-thoughts","title":"Closing Thoughts","text":"<p>I use this approach in all of my Python projects and have yet to find a situation where this (or a variation of it) doesn't work.</p> <ol> <li>We have the flexibility to create an unlimited number of environments. If for example we wanted to spin-up a temporary environment for a pull request: <code>cp environments/staging.py environments/PR_402.py</code> and <code>ENV=PR_402</code> is all you need.</li> <li>When developing locally we can run the system in production mode by prefixing it with <code>ENV=production</code> and vice versa, running software anywhere else in a dev or test mode.</li> <li>Developers can quickly glean the major differences between environments by taking a look at the configuration each of them is overriding. This makes it easier to onboard new team members to your codebase.</li> <li>Similarly, each developer on the team can have his or her own unique configuration. No more clobbering central config because your system has something setup a little differently than the others.</li> <li>We can protect our test environment from accidentally reaching out to production resources by explicitly setting certain variables in <code>environments/test.py</code> to <code>None</code>.</li> <li>We eliminate the heft of passing big key/val configuration maps between various CLI tools such as Docker et-all (although tooling more and more capable of reading env from a file these days)</li> <li>We expose our configuration as a vanilla Python package so there is little to no learning curve and interoperability with other Python tools.</li> <li>We avoid the cost of supporting external libraries/dependencies</li> </ol> <p>At the end of the day this approach is not very glamorous, and that is exactly what we want when we're building systems that need to be reliable, maintainable and efficient. With some plain old Python and a few lines of special code we've unlocked a tremendous amount of flexibility and power in the configuration of our system.</p> <p>Did you find this useful? Consider following @whalesalad on Twitter so you don't miss out on other techniques for building better software.</p>"},{"location":"pyyaml/","title":"Python YAML Configuration Guide","text":"<p>YAML (YAML Ain't Markup Language) is a human-readable data serialization format that is commonly used for configuration files and data exchange between programming languages. Python has built-in support for parsing YAML files using the yaml module, which provides functions for reading and writing YAML data.</p>"},{"location":"pyyaml/#install-and-import-yaml","title":"Install and Import YAML","text":"<pre><code>pip install PyYAML\n</code></pre> <p>After the package installation, you can proceed to import the PyYAML package in Python.</p> <pre><code>import yaml\n</code></pre>"},{"location":"pyyaml/#loading-yaml-with-python","title":"Loading YAML with Python","text":"<p>In this example, we open the file config.yaml in read mode and pass it to the yaml.load() function. We also specify the Loader parameter as yaml.FullLoader, which is a safe loader that can load any YAML document.</p> <pre><code>with open(\"config.yaml\") as f:\n    cfg = yaml.load(f, Loader=yaml.FullLoader)\n</code></pre>"},{"location":"pyyaml/#printing-config","title":"Printing Config","text":"<pre><code>print(cfg)\n</code></pre> <pre><code>{'maintainer': 'Mert Cobanov',\n 'pca_params': {'n_components': 224},\n 'umap_params': {'metrics': ['euclidean', 'l1', 'manhattan', 'chebyshev'],\n                 'min_dist': [0.01, 0.1, 0.5],\n                 'spread': 1.0},\n 'visualize_params': {'median_threshold': 6}}\n</code></pre>"},{"location":"pyyaml/#individual","title":"Individual","text":"<pre><code>print(config['pca_params'])\n\n#'n_components': 224\n</code></pre>"},{"location":"pyyaml/#updating-yaml-with-python","title":"Updating YAML with Python","text":"<p>Updating a YAML configuration file with Python involves loading the existing configuration data, modifying it in memory, and then writing the updated data back to the file. This can be accomplished using the pyyaml library, which provides functions for reading and writing YAML data.</p> <p>Here's an example of how to update a YAML file using Python:</p> <pre><code>cfg[\"n_components\"] = 0.2\ncfg[\"umap_params\"][\"metrics\"].append(\"chebyshev\")\n</code></pre> <pre><code>with open(\"config.yaml\", \"w\") as f:\n    cfg = yaml.dump(\n        cfg, stream=f, default_flow_style=False, sort_keys=False\n    )\n</code></pre> <p>It's important to note that the yaml.dump() function will overwrite the entire contents of the file, so you should be careful to include all of the data that you want to keep in the updated file. If you only want to update a specific section of the YAML data, you can modify just that section in memory and then write the entire data structure back to the file.</p>"},{"location":"tuning-terms/","title":"Training and Tuning Terms","text":""},{"location":"tuning-terms/#pre-trained-vs-fine-tuned","title":"Pre-trained vs Fine-tuned","text":"<p>Pretrained models are pre-trained on large amounts of data to perform a particular task, such as image classification, natural language processing, or speech recognition. These models have learned to identify patterns and features in the data, and can be used as a starting point for a new task with similar characteristics.</p> <p>Fine-tuning, on the other hand, is the process of taking a pretrained model and adapting it to a specific task or domain by further training it on a smaller dataset. The goal of fine-tuning is to leverage the knowledge that the pretrained model has already acquired and to adjust it to the new task's requirements.</p> <p>In summary, pretrained models are models that are trained on large datasets to perform a particular task, and fine-tuning is the process of taking a pretrained model and further adapting it to a specific task or domain.</p> <p>Fine-tuning, transfer learning, and learning from scratch are all approaches to developing machine learning models, but they differ in how they use existing knowledge to build new models:</p>"},{"location":"tuning-terms/#fine-tuning-vs-transfer-learning-vs-learning-from-scratch","title":"Fine-tuning vs Transfer Learning vs Learning From Scratch","text":"<p>Fine-tuning: Fine-tuning is the process of taking a pre-trained model and adapting it to a new task or domain by continuing training it on a smaller dataset. Fine-tuning is typically used when the new task is similar to the original task that the model was trained on. The idea is to leverage the knowledge that the model has already acquired from the original training to improve its performance on the new task.</p> <p>Transfer learning: Transfer learning is similar to fine-tuning in that it involves using a pre-trained model for a new task. However, instead of fine-tuning the model, transfer learning involves using the pre-trained model as a feature extractor, and then training a new model on top of those features. Transfer learning is typically used when the new task is different from the original task that the model was trained on, but there are still some useful features that can be extracted.</p> <p>Learning from scratch: Learning from scratch involves training a new model from scratch on a dataset without using any pre-existing knowledge. This approach requires a large amount of data and computational resources, and can take a long time to achieve good performance. Learning from scratch is typically used when there is no existing pre-trained model that can be adapted to the new task, or when the task is so different that transfer learning or fine-tuning is not effective.</p> <p>In summary, fine-tuning involves adapting a pre-trained model to a new task, transfer learning involves using a pre-trained model as a feature extractor, and learning from scratch involves training a new model from scratch without any pre-existing knowledge.</p>"},{"location":"windows-wsl-ssh/","title":"Step 1. Enable WSL on Windows","text":"<pre><code>Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux\n</code></pre>"},{"location":"windows-wsl-ssh/#step-2-install-linux-distro","title":"Step 2. Install Linux Distro","text":"<pre><code>curl.exe -L -o ubuntu-2004.appx https://aka.ms/wslubuntu2004\nRename-Item ubuntu-2004.appx ubuntu-2004.zip\nExpand-Archive ubuntu-2004.zip ubuntu2004\n</code></pre>"},{"location":"windows-wsl-ssh/#step-3-set-the-path-environment-variable","title":"Step 3. Set the Path Environment Variable","text":"<pre><code>$userenv = [System.Environment]::GetEnvironmentVariable(\"Path\", \"User\")[System.Environment]::SetEnvironmentVariable(\"PATH\", $userenv + \"C:\\Users\\Administrator\\ubuntu2004\", \"User\")\n</code></pre>"},{"location":"windows-wsl-ssh/#step-4-enable-ssh-on-windows","title":"Step 4. Enable SSH on Windows","text":"<pre><code>Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0\nSet-Service -Name ssh-agent -StartupType 'Automatic'\nSet-Service -Name sshd -StartupType 'Automatic'\nGet-Service ssh* | Start-Service\n</code></pre>"},{"location":"windows-wsl-ssh/#step-5-set-default-ssh-shell","title":"Step 5. Set default SSH Shell","text":"<pre><code>New-ItemProperty -Path \"HKLM:\\SOFTWARE\\OpenSSH\" -Name DefaultShell -Value \"C:\\WINDOWS\\System32\\bash.exe\" -PropertyType String -Force\n</code></pre>"},{"location":"archive/dreambooth-rehberi/","title":"Dreambooth Extension for Stable-Diffusion-WebUI","text":"<p>This is a WIP port of Shivam Shriao's Diffusers Repo, which is a modified version of the default Huggingface Diffusers Repo optimized for better performance on lower-VRAM GPUs.</p> <p>It also adds several other features, including training multiple concepts simultaneously, and (Coming soon) Inpainting training.</p>"},{"location":"archive/dreambooth-rehberi/#installation","title":"Installation","text":"<p>To install, simply go to the \"Extensions\" tab in the SD Web UI, select the \"Available\" sub-tab, pick \"Load from:\" to load the list of extensions, and finally, click \"install\" next to the Dreambooth entry.</p> <p></p> <p>For 8bit adam to run properly, it may be necessary to install the CU116 version of torch and torchvision, which can be accomplished below:</p> <p>Refer to the appropriate script below for extra flags to install requirements:</p> <p>https://github.com/d8ahazard/sd_dreambooth_extension/blob/main/webui-user-dreambooth.bat https://github.com/d8ahazard/sd_dreambooth_extension/blob/main/webui-user-dreambooth.sh</p> <p>Setting the torch command to: <code>TORCH_COMMAND=pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 --extra-index-url https://download.pytorch.org/whl/cu116</code> will ensure that the proper torch version is installed when webui-user is executed, and then left alone after that, versus trying to install conflicting versions.</p> <p>We also need a newer version of diffusers, as SD-WebUI uses version 0.3.0, while DB training requires &gt; 0.6.0, so we use 0.7.2. Not having the right diffusers version is the cause of the 'UNet2DConditionModel' object has no attribute 'enable_gradient_checkpointing' error message, as well as safety checker warnings.</p> <p>To force sd-web-ui to only install one set of requirements, we can specify the command line argument:</p> <p>set/export REQS_FILE=.\\extensions\\sd_dreambooth_extension\\requirements.txt</p> <p>And last, if you wish to completely skip the \"native\" install routine of Dreambooth, you can set the following environment flag: DREAMBOOTH_SKIP_INSTALL=True</p> <p>This is ideal for \"offline mode\", where you don't want the script to constantly check things from pypi.</p> <p>After installing via the WebUI, it is recommended to set the above flags and re-launch the entire Stable-diffusion-webui, not just reload it.</p>"},{"location":"archive/dreambooth-rehberi/#usage","title":"Usage","text":""},{"location":"archive/dreambooth-rehberi/#create-a-model","title":"Create a Model","text":"<ol> <li>Go to the Dreambooth tab.</li> <li>Under the \"Create Model\" sub-tab, enter a new model name and select the source checkpoint to train from.    The source checkpoint will be extracted to models\\dreambooth\\MODELNAME\\working - the original will not be touched.    2b. Optionally, you can also specify a huggingface model directory and token to create the Dreambooth dataset from huggingface.co.    Model path format should be like so: 'runwayml/stable-diffusion-v1-5'</li> <li>Click \"Create\". This will take a minute or two, but when done, the UI should indicate that a new model directory has been set up.</li> </ol>"},{"location":"archive/dreambooth-rehberi/#training-basic-settings","title":"Training (Basic Settings)","text":"<ol> <li>After creating a new model, select the new model name from the \"Model\" dropdown at the very top.</li> <li>Select the \"Train Model\" sub-tab.</li> <li>Fill in the paramters as described below:</li> </ol> <p>Concepts List - The path to a JSON file or a JSON string containing multiple concepts. See here for an example.</p> <p>If a concepts list is specified, then the instance prompt, class prompt, instance data dir, and class data dir fields will be ignored.</p> <p>Instance Prompt - A short descriptor of your subject using a UNIQUE keyword and a classifier word. If training a dog, your instance prompt could be \"photo of zkz dog\". The key here is that \"zkz\" is not a word that might overlap with something in the real world \"fluff\", and \"dog\" is a generic word to describe your subject. This is only necessary if using prior preservation. You can use <code>[filewords]</code> as placeholder for reading caption from the image filename or a seprarte .txt file containing caption, for example, <code>[filewords], in the style of zymkyr</code>. This syntax is the same as textual inversion templates.</p> <p>Class Prompt - A keyword indicating what type of \"thing\" your subject is. If your instance prompt is \"photo of zkz dog\", your class prompt would be \"photo of a dog\". Leave this blank to disable prior preservation training.</p> <p>Dataset Directory - The path to the directory where the images described in Instance Prompt are kept. REQUIRED</p> <p>Classification dataset directory - The path to the directory where the images described in Class Prompt are kept. If a class prompt is specified and this is left blank, images will be generated to /models/dreambooth/MODELNAME/classifiers/</p> <p>Total number of classification images to use - Leave at 0 to disable prior preservation. For best results you want ~n*10 classification images - so if you have 40 training photos, then set this to 400. This is just a guess.</p> <p>Training steps - How many total training steps to complete. According to this guide, you should train for appx 100 steps per sample image. So, if you have 40 instance/sample images, you would train for 4k steps. This is, of course, a rough approximation, and other values will have an effect on final output fidelity.</p> <p>Batch size - How many training steps to process simultaneously. You probably want to leave this at 1.</p> <p>Class batch size - How many classification images to generate simultaneously. Set this to whatever you can safely process at once using Txt2Image, or just leave it alone.</p> <p>Learning rate - You probably don't want to touch this.</p> <p>Resolution - The resolution to train images at. You probably want to keep this number at 512 or lower unless your GPU is insane. Lowering this (and the resolution of training images) may help with lower-VRAM GPUs.</p> <p>Save a checkpoint every N steps - How frequently to save a checkpoint from the trained data. I should probably change the default of this to 1000.</p> <p>Generate a preview image every N steps - How frequently will an image be generated as an example of training progress.</p> <p>Preview image prompt - The prompt to use to generate preview image. Leave blank to use the instance prompt.</p> <p>Preview image negative prompt - Like above, but negative. Leave blank to do nothing. :P</p> <p>Number of samples to generate - Self explainatory?</p> <p>Sample guidance scale - Like CFG Scale in Txt2Image/Img2Img, used for generating preview.</p> <p>Sample steps - Same as sample guidance scale, but the number of steps to run to generate preview.</p>"},{"location":"archive/dreambooth-rehberi/#advanced-settings","title":"Advanced Settings","text":"<p>Use CPU Only - As indicated, this is more of a last resort if you can't get it to train with any other settings. Also, as indicated, it will be abysmally slow. Also, you cannot use 8Bit-Adam with CPU Training, or you'll have a bad time.</p> <p>Don't Cache Latents - Why is this not just called \"cache\" latents? Because that's what the original script uses, and I'm trying to maintain the ability to update this as easily as possible. Anyway...when this box is checked latents will not be cached. When latents are not cached, you will save a bit of VRAM, but train slightly slower.</p> <p>Train Text Encoder - Not required, but recommended. Enabling this will probably cost a bit more VRAM, but also purportedly increase output image fidelity.</p> <p>Use 8Bit Adam - Enable this to save VRAM. Should now work on both windows and Linux without needing WSL.</p> <p>Center Crop - Crop images if they aren't the right dimensions? I don't use this, and I recommend you just crop your images \"right\".</p> <p>Gradient Checkpointing - Enable this to save VRAM at the cost of a bit of speed.</p> <p>Scale Learning Rate - I don't use this, not sure what impact it has on performance or output quality.</p> <p>Mixed Precision - Set to 'fp16' to save VRAM at the cost of speed.</p> <p>Everything after 'Mixed Precision' - Adjust at your own risk. Performance/quality benefits from changing these remain to be tested.</p> <p>The next two were added after I wrote the above bit, so just ignore me being a big liar.</p> <p>Pad Tokens - Pads the text tokens to a longer length for some reason.</p> <p>Max Token Length - raise the tokenizer's default limit above 75. Requires Pad Tokens for &gt; 75.</p> <p>Apply Horizontal Flip - \"Apply horizontal flip augmentation\". Flips images horizontally at random, which can potentially offer better editability?</p> <p>Use EMA for finetuning - Use exponential moving average weight to reduce overfitting during the last iterations.</p>"},{"location":"archive/dreambooth-rehberi/#continuing-training","title":"Continuing Training","text":"<p>Once a model has been trained for any number of steps, a config file is saved which contains all of the parameters from the UI.</p> <p>If you wish to continue training a model, you can simply select the model name from the dropdown and then click the blue button next to the model name dropdown to load previous parameters.</p> <p></p>"},{"location":"archive/dreambooth-rehberi/#use-dreambooth-to-fine-tune-stable-diffusion-in-google-colab","title":"Use DreamBooth to Fine-Tune Stable Diffusion in Google Colab","text":""},{"location":"archive/dreambooth-rehberi/#prepare-images","title":"Prepare Images","text":""},{"location":"archive/dreambooth-rehberi/#choosing-images","title":"Choosing Images","text":"<p>When choosing images, it\u2019s recommended to keep the following in mind to get the best results:</p> <ul> <li>Upload a variety of images of your subject. If you\u2019re uploading images of a person, try something like 70% close-ups, 20% from the chest up, 10% full body, so Stable Diffusion also gets some idea of the rest of the subject and not only the face.</li> <li>Try to change things up as much as possible in each picture. This means:</li> <li>Varying the body pose</li> <li>Taking pictures on different days, in different lighting conditions, and with different backgrounds</li> <li>Showing a variety of expressions and emotions</li> <li>When generating new images, whatever you capture will be over-represented. For example, if you take multiple pictures with the same green field behind you, it\u2019s likely that the generated images of you will also contain the green field, even if you want a dystopic background. This can apply to anything, like jewelry, clothes, or even people in the background. If you want to avoid seeing that element in your generated image, make sure not to repeat it in every shot. On the other hand, if you want it in the generated images, make sure it\u2019s in your pictures more often.</li> <li>It\u2019s recommended that you provide ~50 images of what you\u2019d like to train Stable Diffusion on to get great results. However, I\u2019ve only used 20-30 so far, and the results are pretty good. If you\u2019re just starting out and want to test it out, I think 20-30 images should be good enough for now, and you can get 50 images after you\u2019ve seen it work.</li> </ul>"},{"location":"archive/dreambooth-rehberi/#resize-crop-to-512-x-512px","title":"Resize &amp; Crop to 512 x 512px","text":"<p>Once you\u2019ve chosen your images, you should prepare them.</p> <p>First, we need to resize and crop our images to be 512 x 512px. We can easily do this using the website https://birme.net.</p> <p>To do this, just:</p> <ul> <li>Visit the website</li> <li>Upload your images</li> <li>Set your dimensions to 512 x 512px</li> <li>Adjust the cropping area to center your subject</li> <li>Click on Save as Zip to download the archive.</li> <li>You can then unzip it on your computer, and we\u2019ll use them a bit later.</li> <li>Birme.net - Resize Images</li> <li>Resizing Images using Birme.net</li> </ul>"},{"location":"archive/dreambooth-rehberi/#renaming-your-images","title":"Renaming Your Images","text":"<p>We\u2019ll also want to rename our images to contain the subject\u2019s name:</p> <ol> <li> <p>Firstly, the subject name should be one unique/random/unknown keyword. This is because Stable Diffusion also has some knowledge of The Sandman from other sources other than the one played by Tom Sturridge and we don\u2019t want it to get confused and make a combination of interpretations of The Sandman. As such, I\u2019ll call it Sandman2022 to make sure it\u2019s unique.</p> </li> <li> <p>Renaming images to subject (1), subject (2) .. subject (30). This is because, using this method, you can train multiple subjects at once. If you want to fine-tune Stable Diffusion with Sandman, your friend Kevin, and your cat, you can give it prepare images for each of them. For the Sandman you\u2019d have Sandman2022 (1), Sandman2022 (2) \u2026 Sandman (30), for Kevin you\u2019d have KevinKevinson2022 (1), KevinKevinson2022 (2) \u2026 KevinKevinson (30), and for your cat you\u2019d have DexterTheCat (1), DexterTheCat (2) \u2026 DexterTheCat(30).    Here\u2019s me renaming my images for Sandman2022 in bulk on Windows. Just select them all, right click one of them and click Rename and give it what name you want and click anywhere to finish the renaming. Everything else will be renamed as well.</p> </li> </ol>"},{"location":"archive/instant-ngp-windows/","title":"Instant Neural Graphics Primitives !","text":""},{"location":"archive/instant-ngp-windows/#requirements","title":"Requirements","text":"<ul> <li>An NVIDIA GPU; tensor cores increase performance when available. All shown results come from an RTX 3090.</li> <li>Python ver: 3.9.*</li> <li>Visual Studio Community 2019 (Latest the best, ~8GB) Below are the install requirements   </li> <li>CUDA v11.6. You can check ur CUDA version via <code>nvcc --version</code> in any prompt and if it's not CUDA11.6, refer to this to swap/install the correct version.</li> <li>On some machines, <code>pyexr</code> refuses to install via <code>pip</code>. This can be resolved by installing OpenEXR from here. See later.</li> <li>This installation tutorial will be using Anaconda. Download anaconda prompt here.</li> <li>OptiX 7.3 or higher for faster mesh SDF training. You need to either login or join to obtain the installer. Set the system environment variables <code>OptiX_INSTALL_DIR</code> to the installation directory if it is not discovered automatically. Should look like this: </li> </ul>"},{"location":"archive/instant-ngp-windows/#compilation","title":"Compilation","text":"<p>copy these files <code>C:\\Program Files\\NVIDIA GPU Computing Toolkit\\CUDA\\v11.6\\extras\\visual_studio_integration\\MSBuildExtensions</code> to here <code>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Microsoft\\VC\\v160\\BuildCustomizations</code></p> <p><code>cd</code> into a directory that you want to download the codes at. Eg. <code>cd F:\\Tutorial\\ngp\\</code></p> <p>Begin by cloning this repository and all its submodules using the following command (if you don't have git, download here and add to path):</p> <pre><code>$ git clone --recursive https://github.com/nvlabs/instant-ngp\n$ cd instant-ngp\n</code></pre> <p>if your python is not 3.9 (check with command <code>python --version</code>) then you need to run the following command to get it to ver 3.9.*</p> <pre><code>conda install python=3.9\n</code></pre> <p>Then, open Developer Command Prompt, you can find this in your search bar.</p> <p></p> <p>Then <code>cd</code> to where you cloned your repository so you are in its root folder <code>/instant-ng/</code>:</p> <pre><code>cmake . -B build\ncmake --build build --config RelWithDebInfo -j 16\n</code></pre> <p>If the any of these build fails, please consult this list of possible fixes before opening an issue.</p> <p>If automatic GPU architecture detection fails, (as can happen if you have multiple GPUs installed), set the <code>TCNN_CUDA_ARCHITECTURES</code> enivonment variable for the GPU you would like to use. The following table lists the values for common GPUs. If your GPU is not listed, consult this exhaustive list.</p> RTX 30X0 A100 RTX 20X0 TITAN V / V100 GTX 10X0 / TITAN Xp GTX 9X0 K80 86 80 75 70 61 52 37"},{"location":"archive/instant-ngp-windows/#interactive-training-and-rendering-on-custom-image-sets","title":"Interactive Training and Rendering on Custom Image Sets","text":"<p>Install COLMAP, I used ver 3.7</p> <p>Add it to your system environment variables at Environment Variables &gt; System Variables Path &gt; Edit environment variable</p> <p></p> <p>open anaconda prompt, if you don't have you don't have you can get it here <code>cd</code> into isntant-ngp as root</p> <pre><code>conda create -n ngp python=3.9\nconda activate ngp\npip install -r requirements.txt\n</code></pre> <p>if <code>pyexr</code> cannot be installed via <code>pip install pyexr</code>, download OpenEXR\u20111.3.2\u2011cp39\u2011cp39\u2011win_amd64.whl and move it to your root folder. Then you can run:</p> <pre><code>pip install OpenEXR-1.3.2-cp39-cp39-win_amd64.whl\n</code></pre> <p>Place your custom image set under <code>data/&lt;image_set_name&gt;</code></p> <p>Get <code>transform.json</code> from the following command. Insert your path to your images at <code>&lt;image/path&gt;</code></p> <pre><code>python scripts/colmap2nerf.py --colmap_matcher exhaustive --run_colmap --aabb_scale 16 --images &lt;image/path&gt;\n</code></pre> <p><code>transform.json</code> will be generated at the root folder, drag and drop it into your <code>data/&lt;image_set_name&gt;</code> folder.</p> <p>You have to reorganize the folder structure due to how <code>transforms.json</code> is created...</p> <p>For example:</p> <p>File Structure BEFORE generating transform.json</p> <pre><code>\ud83d\udcc2instant-ngp/ # this is root\n\u251c\u2500\u2500 \ud83d\udcc2data/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2toy_truck/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdctoy_truck_001.jpg\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdctoy_truck_002.jpg\n\u2502   \u2502   \u2502...\n\u2502   \u2502...\n\u2502...\n</code></pre> <p>File Structure AFTER generating transform.json</p> <pre><code>\ud83d\udcc2instant-ngp/ # this is root\n\u251c\u2500\u2500 \ud83d\udcc2data/\n\u2502   \u251c\u2500\u2500 \ud83d\udcc2toy_truck/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdctransforms.json/\n\u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2data/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcc2toy_truck/\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdctoy_truck_001.jpg\n\u2502   \u2502   \u2502   \u2502   \u251c\u2500\u2500 \ud83d\udcdctoy_truck_002.jpg\n\u2502   \u2502   \u2502   \u2502   \u2502...\n\u2502   \u2502   \u2502   \u2502...\n\u2502   \u2502   \u2502...\n\u2502   \u2502...\n\u2502...\n</code></pre> <p>Note: adjusting the <code>\"aabb_scale\"</code> inside <code>transform.json</code> can reduce load on GPU VRAM. The lower the value the less intensive it'll be.</p> <p>Finally, to run instant-ngp:</p> <pre><code>&lt;path_to_your_ngp&gt;\\instant-ngp\\build\\testbed.exe --scene data/&lt;image_set_name&gt;\n</code></pre> <p>eg.</p> <pre><code>C:\\user\\user\\download\\instant-ngp\\build\\testbed.exe --scene data/toy_truck\n</code></pre> <p>And it should launch the GUI and everything amazing with it</p>"},{"location":"archive/instant-ngp-windows/#rendering-custom-camera-path","title":"Rendering custom camera path","text":"<ol> <li>May need to install more dependencies. Install <code>pip install tqdm scipy pillow opencv-python</code>, <code>conda install -c conda-forge ffmpeg</code>, might be needed in the conda virtual environment. Refer to installation of <code>pyexr</code> above in the installation section if you didn't install that too.</li> <li>Train any image set like above.</li> <li>After you have reached a point that you are satisfied with your training, save a Snapshot on the GUI. (one of the tabs &amp; no need to edit the path &amp; the name)</li> <li>Find another GUI called camera path, it'll play hide and seek with you but it is there so find that window.</li> <li>The GUI is so well made, if you know how to use any 3D engine, it's really similar. Add camera path will give you a new angle of the camera.</li> <li>After you have finished adding your camera points, save the camera path. (no need to edit the path &amp; the name)</li> <li>Render the path with the following command:</li> </ol> <pre><code>python scripts/render.py --scene &lt;scene_path&gt; --n_seconds &lt;seconds&gt; --fps &lt;fps&gt; --render_name &lt;name&gt; --width &lt;resolution_width&gt; --height &lt;resolution_height&gt;\n\n</code></pre> <p>eg.</p> <pre><code>python scripts/render.py --scene data/toy --n_seconds 5 --fps 60 --render_name test --width 1920 --height 1080\n</code></pre> <p>Your video will be saved at root. You might have to play around with the <code>fps</code> and <code>n_seconds</code> to speed up or slow down. I couldn't get it accurately because of the lack of information and this is the best I could come up with. To be honest, this is only a short-term solution too, since the author has promised to publish an official one. So stay tuned!</p> <p>And my fork edits end here.</p>"},{"location":"archive/instant-ngp-windows/#interactive-training-and-rendering","title":"Interactive training and rendering","text":"<p>This codebase comes with an interactive testbed that includes many features beyond our academic publication:</p> <ul> <li>Additional training features, such as extrinsics and intrinsics optimization.</li> <li>Marching cubes for <code>NeRF-&gt;Mesh</code> and <code>SDF-&gt;Mesh</code> conversion.</li> <li>A spline-based camera path editor to create videos.</li> <li>Debug visualizations of the activations of every neuron input and output.</li> <li>And many more task-specific settings.</li> <li>See also our one minute demonstration video of the tool.</li> </ul>"},{"location":"archive/instant-ngp-windows/#nerf-fox","title":"NeRF fox","text":"<p>One test scene is provided in this repository, using a small number of frames from a casually captured phone video:</p> <pre><code>instant-ngp$ ./build/testbed --scene data/nerf/fox\n</code></pre> <p></p> <p>Alternatively, download any NeRF-compatible scene (e.g. from the NeRF authors' drive). Now you can run:</p> <pre><code>instant-ngp$ ./build/testbed --scene data/nerf_synthetic/lego/transforms_train.json\n</code></pre> <p>For more information about preparing datasets for use with our NeRF implementation, please see this document.</p>"},{"location":"archive/instant-ngp-windows/#sdf-armadillo","title":"SDF armadillo","text":"<pre><code>instant-ngp$ ./build/testbed --scene data/sdf/armadillo.obj\n</code></pre>"},{"location":"archive/instant-ngp-windows/#image-of-einstein","title":"Image of Einstein","text":"<pre><code>instant-ngp$ ./build/testbed --scene data/image/albert.exr\n</code></pre> <p>To reproduce the gigapixel results, download, for example, the Tokyo image and convert it to <code>.bin</code> using the <code>scripts/image2bin.py</code> script. This custom format improves compatibility and loading speed when resolution is high. Now you can run:</p> <pre><code>instant-ngp$ ./build/testbed --scene data/image/tokyo.bin\n</code></pre>"},{"location":"archive/instant-ngp-windows/#volume-renderer","title":"Volume Renderer","text":"<p>Download the nanovdb volume for the Disney cloud, which is derived from here (CC BY-SA 3.0).</p> <pre><code>instant-ngp$ ./build/testbed --mode volume --scene data/volume/wdas_cloud_quarter.nvdb\n</code></pre> <p></p>"},{"location":"archive/instant-ngp-windows/#python-bindings","title":"Python bindings","text":"<p>To conduct controlled experiments in an automated fashion, all features from the interactive testbed (and more!) have Python bindings that can be easily instrumented. For an example of how the <code>./build/testbed</code> application can be implemented and extended from within Python, see <code>./scripts/run.py</code>, which supports a superset of the command line arguments that <code>./build/testbed</code> does.</p> <p>Happy hacking!</p>"},{"location":"archive/instant-ngp-windows/#troubleshooting-compile-errors","title":"Troubleshooting compile errors","text":"<p>Before investigating further, make sure all submodules are up-to-date and try compiling again.</p> <pre><code>instant-ngp$ git submodule sync --recursive\ninstant-ngp$ git submodule update --init --recursive\n</code></pre> <p>If instant-ngp still fails to compile, update CUDA as well as your compiler to the latest versions you can install on your system. It is crucial that you update both, as newer CUDA versions are not always compatible with earlier compilers and vice versa. If your problem persists, consult the following table of known issues.</p> Problem Resolution CMake error: No CUDA toolset found / CUDA_ARCHITECTURES is empty for target \"cmTC_0c70f\" Windows: the Visual Studio CUDA integration was not installed correctly. Follow these instructions to fix the problem without re-installing CUDA. (#18) Linux: Environment variables for your CUDA installation are probably incorrectly set. You may work around the issue using <code>cmake . -B build -DCMAKE_CUDA_COMPILER=/usr/local/cuda-&lt;your cuda version&gt;/bin/nvcc</code> (#28) CMake error: No known features for CXX compiler \"MSVC\" Reinstall Visual Studio &amp; make sure you run CMake from a developer shell. (#21) Compile error: undefined references to \"cudaGraphExecUpdate\" / identifier \"cublasSetWorkspace\" is undefined Update your CUDA installation (which is likely 11.0) to 11.3 or higher. (#34 #41 #42) Compile error: too few arguments in function call Update submodules with the above two <code>git</code> commands. (#37 #52) Python error: No module named 'pyngp' It is likely that CMake did not detect your Python installation and therefore did not build <code>pyngp</code>. Check CMake logs to verify this. If <code>pyngp</code> was built in a different folder than <code>instant-ngp/build</code>, Python will be unable to detect it and you have to supply the full path to the import statement. (#43) <p>If you cannot find your problem in the table, please feel free to open an issue and ask for help.</p>"},{"location":"archive/instant-ngp-windows/#thanks","title":"Thanks","text":"<p>Many thanks to Jonathan Tremblay and Andrew Tao for testing early versions of this codebase and to Arman Toorians and Saurabh Jain for the factory robot dataset. We also thank Andrew Webb for noticing that one of the prime numbers in the spatial hash was not actually prime; this has been fixed since.</p> <p>This project makes use of a number of awesome open source libraries, including:</p> <ul> <li>tiny-cuda-nn for fast CUDA MLP networks</li> <li>tinyexr for EXR format support</li> <li>tinyobjloader for OBJ format support</li> <li>stb_image for PNG and JPEG support</li> <li>Dear ImGui an excellent immediate mode GUI library</li> <li>Eigen a C++ template library for linear algebra</li> <li>pybind11 for seamless C++ / Python interop</li> <li>and others! See the <code>dependencies</code> folder.</li> </ul> <p>Many thanks to the authors of these brilliant projects!</p>"},{"location":"archive/instant-ngp-windows/#license-and-citation","title":"License and Citation","text":"<pre><code>@article{mueller2022instant,\n    title = {Instant Neural Graphics Primitives with a Multiresolution Hash Encoding},\n    author = {Thomas M\\\"uller and Alex Evans and Christoph Schied and Alexander Keller},\n    journal = {arXiv:2201.05989},\n    year = {2022},\n    month = jan\n}\n</code></pre> <p>Copyright \u00a9 2022, NVIDIA Corporation. All rights reserved.</p> <p>This work is made available under the Nvidia Source Code License-NC. Click here to view a copy of this license.</p>"},{"location":"archive/nerf-studio-docker/","title":"NerfStudio Installation","text":""},{"location":"archive/nerf-studio-docker/#docker","title":"Docker","text":"<ol> <li>Install Docker</li> <li>Pull cuda.11.3 image</li> </ol> <pre><code>docker pull nvidia/cuda:11.3.0-base-ubuntu20.04\n</code></pre> <pre><code>docker run --name nerf_docker --gpus all -p 3000:3000 -it cobanovgithub\n</code></pre> <pre><code>apt-get update\napt-get install wget\n</code></pre> <pre><code>\nns-download-data --dataset=nerfstudio --capture=poster\n</code></pre> <pre><code>ns-train nerfacto --viewer.websocket-port 3000 nerfstudio-data --data data/nerfstudio/poster --downscale-factor 4\n</code></pre>"},{"location":"archive/nerf-studio-docker/#conda","title":"CONDA","text":"<p>Download the latest shell script wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh</p> <p>Make the miniconda installation script executable chmod +x Miniconda3-latest-Linux-x86_64.sh</p> <p>Run miniconda installation script ./Miniconda3-latest-Linux-x86_64.sh</p> <p>Create and activate an conda environment To create a conda environment, run conda create -n newenv</p> <p>You can also create the environment from a file like environment.yml, you can use use the conda env create -f command: conda env create -f environment.yml. The environment name will be the directory name.</p> <pre><code>source ~/.bashrc\n</code></pre>"},{"location":"archive/nerf-studio-docker/#create-environment","title":"Create environment","text":"<pre><code>conda create --name nerfstudio -y python=3.8\nconda activate nerfstudio\npython -m pip install --upgrade pip\n</code></pre>"},{"location":"archive/nerf-studio-docker/#tinycudann","title":"TinyCudaNN","text":"<pre><code>apt-get install build-essential git\nsource ~/.bashrc\n</code></pre> <p>pip install torch==1.12.1+cu113 torchvision==0.13.1+cu113 -f https://download.pytorch.org/whl/torch_stable.html</p>"},{"location":"archive/training-own-diffusion/","title":"Training Own Diffusion Model","text":""},{"location":"archive/training-own-diffusion/#kernel-inception-distance","title":"Kernel Inception Distance","text":"<p>The kernel inception distance (KID) is a measure of the similarity between two sets of images. It was introduced by Google AI researcher, Tobias Weyand, in his paper \"Kernel Inception Distance: A New Distance Measure for Improved Image Quality Assessment\". In this paper, Weyand proposed using the KID to measure the difference between the activations of two sets of images when passed through an inception network, which is a type of deep learning neural network. The KID is calculated as the squared L2 distance between the distributions of the activations of the two sets of images. It is typically used in the field of computer vision to evaluate the performance of image generation algorithms.</p>"},{"location":"archive/training-own-diffusion/#sources","title":"Sources","text":"<ul> <li>https://keras.io/examples/generative/ddim/#denoising-diffusion-implicit-models</li> <li>https://benanne.github.io/2022/01/31/diffusion.html</li> <li>https://github.com/apapiu/guided-diffusion-keras</li> <li>https://www.louisbouchard.ai/latent-diffusion-models/</li> <li>https://www.kaggle.com/code/apapiu/train-latent-diffusion-in-keras-from-scratch</li> <li>https://github.com/CompVis/taming-transformers</li> <li>https://github.com/CompVis/latent-diffusion</li> <li>https://github.com/huggingface/diffusers</li> </ul>"},{"location":"assets/stable/","title":"Cobanov's Stable Diffusion Notes","text":""},{"location":"assets/stable/#types-of-fine-tuning","title":"Type's of Fine-tuning","text":"<p>Source: reddit post</p>"},{"location":"assets/stable/#1-textual-inversion","title":"1. Textual Inversion","text":"<p>Textual Inversion - trains a word with one or more vectors that approximate your image. So if it is something it already has seen lots of examples of, it might have the concept and just need to 'point' at it. It is just expanding the vocabulary of model but all information it uses is already in the model.</p>"},{"location":"assets/stable/#2-dreambooth","title":"2. Dreambooth","text":"<p>Dreambooth - this is essentially model fine tuning, which changes the weights of the main model. Dreambooth differs from typical fine tuning in that in tries to keep from forgetting/overwriting adjacent concepts during the tuning.</p>"},{"location":"assets/stable/#3-hypernetwork","title":"3. Hypernetwork","text":"<p>Hypernetworks - this is basically an adaptive head - it takes information from late in the model but injects information from the prompt 'skipping' the rest of the model. So it is similar to fine tuning the last 2 layers of a model but it gets much more signal from the prompt (it is taking the clip embedding of the prompt right before the output layer).</p>"},{"location":"assets/stable/#discussions","title":"Discussions:","text":"<ul> <li>Hypernetwork training topic </li> </ul>"},{"location":"assets/stable/#links","title":"Links","text":"<ul> <li>Stable Diffusion Models</li> </ul>"},{"location":"assets/stable/#textual-inversion-vs-hypernetworks","title":"Textual Inversion vs Hypernetworks","text":"<p>Textual Inversion and Hyper Network have different driving principles, and Textual Inversion has much smaller capacity of learning results than Hyper Network.</p> <p>Textual Inversion has a slower learning speed than Hyper Network, so it is more suitable for learning specific objects, characters, features, etc. than abstract things such as patterns and painting styles. Also, in order to memorize the pattern and painting style, it is necessary to prepare data that has been unified to some extent, such as coloring and color usage, so it is more difficult to prepare learning data than Hyper Network.</p> <p>Also, Hyper Network can only embed one at a time, but even so, it is OK if you prepare a large amount of data using various patterns of composition, materials, and techniques and let it learn. Therefore, it can be said that Hyper Network is more suitable for improving the accuracy of illustrations. However, textual inversion is easier to handle if you want to remember specific patterns and characteristics.</p>"},{"location":"assets/stable/#training-hypernetworks","title":"Training Hypernetworks","text":"<p>hyper network layer structure If write \"1, 2, 1\", hypernetworks are composed of 2 fully connected layers whose intermediate dim is 2x, which is same as up to now. The more you add the number, like \"1, 2, 4, 2, 1\", the more the structure of hypernetworks becomes deeper. Deep hypernetworks are suited for training with large datasets.</p> <p>Add layer normalization If checked, add layer normalization after every fully connected layer. It would be meaningful to prevent hypernetworks from overfitting and make training more stable.</p> <p>https://rentry.org/sd-e621-textual-inversion</p>"},{"location":"diffusion/blender-depthmap/","title":"Blender Depth-map","text":"<p>Source: Reddit Post</p> <p></p> <p>MiDaS is really good at automatically generating depth maps from 2D images, but it lacks the detail you can get with a true map from a 3D render.</p> <ol> <li> <p>Build the scene in Blender. Don't worry too much about texturing or lighting.</p> </li> <li> <p>Render the scene like you normally would.</p> </li> <li> <p>Perform a second render, this time with just the inverted Z (depth) channel.</p> </li> <li> <p>Apply this pull request: AUTOMATIC1111</p> </li> <li> <p>Write a dirty hack so you can use your rendered depth map instead of the one generated by MiDaS</p> </li> <li> <p>In img2img, turn the denoising strength all the way to 1, unless you want to show off the ugly colours you chose for the render</p> </li> <li> <p>Load the normal render into img2img, describe the scene, and hit generate</p> </li> </ol> <p>These instructions currently belong on r/restofthefuckingowl, but I hope it'll get easier as the tools mature.</p>"},{"location":"diffusion/contributions/","title":"How to Contribute","text":"<p>If you would like to contribute to the Latent Diffusion Guidebook, please follow these steps:</p> <p>Fork the repository: First, you will need to create a copy of the guidebook's repository on your own GitHub account. This is called \"forking\" the repository. You can do this by clicking the \"Fork\" button at the top of the repository page.</p> <p>Clone the repository: Next, you will need to download a copy of the repository to your local computer. This is called \"cloning\" the repository. You can do this by using the following command: git clone https://github.com/YOUR-USERNAME/latent-diffusion-guidebook.git (replace \"YOUR-USERNAME\" with your own GitHub username).</p> <p>Create a new branch: When making changes to the guidebook, it is best to create a separate branch for your work. This allows you to experiment with different ideas without affecting the main branch of the repository. You can create a new branch by using the following command: git checkout -b my-changes (replace \"my-changes\" with a descriptive name for your branch).</p> <p>Make your changes: Now, you can make the changes that you want to contribute to the guidebook. You can use any text editor or code editor to do this.</p> <p>Test your changes: Before you submit your changes, it is important to make sure that they work correctly and do not cause any problems. You can test your changes by building the guidebook and previewing it locally.</p> <p>Commit your changes: Once you are satisfied with your changes, you can save them to your local repository by \"committing\" them. You can do this by using the following commands:</p> <pre><code>git add .\ngit commit -m \"My changes to the latent diffusion guidebook\"\n</code></pre> <p>Push your changes: Finally, you can \"push\" your changes to your fork of the repository on GitHub. This will upload your changes to the cloud so that others can see them. You can do this by using the following command: git push origin my-changes (replace \"my-changes\" with the name of your branch).</p> <p>Discuss your changes: After you have created a pull request, the maintainers of the guidebook will review your changes and may ask you questions or request additional changes. You can discuss your changes with the maintainers by commenting on the pull request.</p> <p>Merge your changes: If the maintainers of the guidebook are satisfied with your changes, they will \"merge\" your pull request into the main branch of the repository. This will add your changes to the guidebook and make them available to everyone.</p> <p>Thank you for considering contributing to the Latent Diffusion Guidebook! We appreciate your help and look forward to reviewing your contributions.</p>"},{"location":"diffusion/dream-booth/","title":"Dreambooth Extension for Stable-Diffusion-WebUI","text":"<p>This is a WIP port of Shivam Shriao's Diffusers Repo, which is a modified version of the default Huggingface Diffusers Repo optimized for better performance on lower-VRAM GPUs.</p> <p>It also adds several other features, including training multiple concepts simultaneously, and (Coming soon) Inpainting training.</p>"},{"location":"diffusion/dream-booth/#installation","title":"Installation","text":"<p>To install, simply go to the \"Extensions\" tab in the SD Web UI, select the \"Available\" sub-tab, pick \"Load from:\" to load the list of extensions, and finally, click \"install\" next to the Dreambooth entry.</p> <p></p> <p>For 8bit adam to run properly, it may be necessary to install the CU116 version of torch and torchvision, which can be accomplished below:</p> <p>Refer to the appropriate script below for extra flags to install requirements:</p> <p>https://github.com/d8ahazard/sd_dreambooth_extension/blob/main/webui-user-dreambooth.bat https://github.com/d8ahazard/sd_dreambooth_extension/blob/main/webui-user-dreambooth.sh</p> <p>Setting the torch command to: <code>TORCH_COMMAND=pip install torch==1.12.1+cu116 torchvision==0.13.1+cu116 --extra-index-url https://download.pytorch.org/whl/cu116</code> will ensure that the proper torch version is installed when webui-user is executed, and then left alone after that, versus trying to install conflicting versions.</p> <p>We also need a newer version of diffusers, as SD-WebUI uses version 0.3.0, while DB training requires &gt; 0.6.0, so we use 0.7.2. Not having the right diffusers version is the cause of the 'UNet2DConditionModel' object has no attribute 'enable_gradient_checkpointing' error message, as well as safety checker warnings.</p> <p>To force sd-web-ui to only install one set of requirements, we can specify the command line argument:</p> <p>set/export REQS_FILE=.\\extensions\\sd_dreambooth_extension\\requirements.txt</p> <p>And last, if you wish to completely skip the \"native\" install routine of Dreambooth, you can set the following environment flag: DREAMBOOTH_SKIP_INSTALL=True</p> <p>This is ideal for \"offline mode\", where you don't want the script to constantly check things from pypi.</p> <p>After installing via the WebUI, it is recommended to set the above flags and re-launch the entire Stable-diffusion-webui, not just reload it.</p>"},{"location":"diffusion/dream-booth/#usage","title":"Usage","text":""},{"location":"diffusion/dream-booth/#create-a-model","title":"Create a Model","text":"<ol> <li>Go to the Dreambooth tab.</li> <li>Under the \"Create Model\" sub-tab, enter a new model name and select the source checkpoint to train from.    The source checkpoint will be extracted to models\\dreambooth\\MODELNAME\\working - the original will not be touched.    2b. Optionally, you can also specify a huggingface model directory and token to create the Dreambooth dataset from huggingface.co.    Model path format should be like so: 'runwayml/stable-diffusion-v1-5'</li> <li>Click \"Create\". This will take a minute or two, but when done, the UI should indicate that a new model directory has been set up.</li> </ol>"},{"location":"diffusion/dream-booth/#training-basic-settings","title":"Training (Basic Settings)","text":"<ol> <li>After creating a new model, select the new model name from the \"Model\" dropdown at the very top.</li> <li>Select the \"Train Model\" sub-tab.</li> <li>Fill in the paramters as described below:</li> </ol> <p>Concepts List - The path to a JSON file or a JSON string containing multiple concepts. See here for an example.</p> <p>If a concepts list is specified, then the instance prompt, class prompt, instance data dir, and class data dir fields will be ignored.</p> <p>Instance Prompt - A short descriptor of your subject using a UNIQUE keyword and a classifier word. If training a dog, your instance prompt could be \"photo of zkz dog\". The key here is that \"zkz\" is not a word that might overlap with something in the real world \"fluff\", and \"dog\" is a generic word to describe your subject. This is only necessary if using prior preservation. You can use <code>[filewords]</code> as placeholder for reading caption from the image filename or a seprarte .txt file containing caption, for example, <code>[filewords], in the style of zymkyr</code>. This syntax is the same as textual inversion templates.</p> <p>Class Prompt - A keyword indicating what type of \"thing\" your subject is. If your instance prompt is \"photo of zkz dog\", your class prompt would be \"photo of a dog\". Leave this blank to disable prior preservation training.</p> <p>Dataset Directory - The path to the directory where the images described in Instance Prompt are kept. REQUIRED</p> <p>Classification dataset directory - The path to the directory where the images described in Class Prompt are kept. If a class prompt is specified and this is left blank, images will be generated to /models/dreambooth/MODELNAME/classifiers/</p> <p>Total number of classification images to use - Leave at 0 to disable prior preservation. For best results you want ~n*10 classification images - so if you have 40 training photos, then set this to 400. This is just a guess.</p> <p>Training steps - How many total training steps to complete. According to this guide, you should train for appx 100 steps per sample image. So, if you have 40 instance/sample images, you would train for 4k steps. This is, of course, a rough approximation, and other values will have an effect on final output fidelity.</p> <p>Batch size - How many training steps to process simultaneously. You probably want to leave this at 1.</p> <p>Class batch size - How many classification images to generate simultaneously. Set this to whatever you can safely process at once using Txt2Image, or just leave it alone.</p> <p>Learning rate - You probably don't want to touch this.</p> <p>Resolution - The resolution to train images at. You probably want to keep this number at 512 or lower unless your GPU is insane. Lowering this (and the resolution of training images) may help with lower-VRAM GPUs.</p> <p>Save a checkpoint every N steps - How frequently to save a checkpoint from the trained data. I should probably change the default of this to 1000.</p> <p>Generate a preview image every N steps - How frequently will an image be generated as an example of training progress.</p> <p>Preview image prompt - The prompt to use to generate preview image. Leave blank to use the instance prompt.</p> <p>Preview image negative prompt - Like above, but negative. Leave blank to do nothing. :P</p> <p>Number of samples to generate - Self explainatory?</p> <p>Sample guidance scale - Like CFG Scale in Txt2Image/Img2Img, used for generating preview.</p> <p>Sample steps - Same as sample guidance scale, but the number of steps to run to generate preview.</p>"},{"location":"diffusion/dream-booth/#advanced-settings","title":"Advanced Settings","text":"<p>Use CPU Only - As indicated, this is more of a last resort if you can't get it to train with any other settings. Also, as indicated, it will be abysmally slow. Also, you cannot use 8Bit-Adam with CPU Training, or you'll have a bad time.</p> <p>Don't Cache Latents - Why is this not just called \"cache\" latents? Because that's what the original script uses, and I'm trying to maintain the ability to update this as easily as possible. Anyway...when this box is checked latents will not be cached. When latents are not cached, you will save a bit of VRAM, but train slightly slower.</p> <p>Train Text Encoder - Not required, but recommended. Enabling this will probably cost a bit more VRAM, but also purportedly increase output image fidelity.</p> <p>Use 8Bit Adam - Enable this to save VRAM. Should now work on both windows and Linux without needing WSL.</p> <p>Center Crop - Crop images if they aren't the right dimensions? I don't use this, and I recommend you just crop your images \"right\".</p> <p>Gradient Checkpointing - Enable this to save VRAM at the cost of a bit of speed.</p> <p>Scale Learning Rate - I don't use this, not sure what impact it has on performance or output quality.</p> <p>Mixed Precision - Set to 'fp16' to save VRAM at the cost of speed.</p> <p>Everything after 'Mixed Precision' - Adjust at your own risk. Performance/quality benefits from changing these remain to be tested.</p> <p>The next two were added after I wrote the above bit, so just ignore me being a big liar.</p> <p>Pad Tokens - Pads the text tokens to a longer length for some reason.</p> <p>Max Token Length - raise the tokenizer's default limit above 75. Requires Pad Tokens for &gt; 75.</p> <p>Apply Horizontal Flip - \"Apply horizontal flip augmentation\". Flips images horizontally at random, which can potentially offer better editability?</p> <p>Use EMA for finetuning - Use exponential moving average weight to reduce overfitting during the last iterations.</p>"},{"location":"diffusion/dream-booth/#continuing-training","title":"Continuing Training","text":"<p>Once a model has been trained for any number of steps, a config file is saved which contains all of the parameters from the UI.</p> <p>If you wish to continue training a model, you can simply select the model name from the dropdown and then click the blue button next to the model name dropdown to load previous parameters.</p> <p></p>"},{"location":"diffusion/dream-booth/#use-dreambooth-to-fine-tune-stable-diffusion-in-google-colab","title":"Use DreamBooth to Fine-Tune Stable Diffusion in Google Colab","text":""},{"location":"diffusion/dream-booth/#prepare-images","title":"Prepare Images","text":""},{"location":"diffusion/dream-booth/#choosing-images","title":"Choosing Images","text":"<p>When choosing images, it\u2019s recommended to keep the following in mind to get the best results:</p> <ul> <li>Upload a variety of images of your subject. If you\u2019re uploading images of a person, try something like 70% close-ups, 20% from the chest up, 10% full body, so Stable Diffusion also gets some idea of the rest of the subject and not only the face.</li> <li>Try to change things up as much as possible in each picture. This means:</li> <li>Varying the body pose</li> <li>Taking pictures on different days, in different lighting conditions, and with different backgrounds</li> <li>Showing a variety of expressions and emotions</li> <li>When generating new images, whatever you capture will be over-represented. For example, if you take multiple pictures with the same green field behind you, it\u2019s likely that the generated images of you will also contain the green field, even if you want a dystopic background. This can apply to anything, like jewelry, clothes, or even people in the background. If you want to avoid seeing that element in your generated image, make sure not to repeat it in every shot. On the other hand, if you want it in the generated images, make sure it\u2019s in your pictures more often.</li> <li>It\u2019s recommended that you provide ~50 images of what you\u2019d like to train Stable Diffusion on to get great results. However, I\u2019ve only used 20-30 so far, and the results are pretty good. If you\u2019re just starting out and want to test it out, I think 20-30 images should be good enough for now, and you can get 50 images after you\u2019ve seen it work.</li> </ul>"},{"location":"diffusion/dream-booth/#resize-crop-to-512-x-512px","title":"Resize &amp; Crop to 512 x 512px","text":"<p>Once you\u2019ve chosen your images, you should prepare them.</p> <p>First, we need to resize and crop our images to be 512 x 512px. We can easily do this using the website https://birme.net.</p> <p>To do this, just:</p> <ul> <li>Visit the website</li> <li>Upload your images</li> <li>Set your dimensions to 512 x 512px</li> <li>Adjust the cropping area to center your subject</li> <li>Click on Save as Zip to download the archive.</li> <li>You can then unzip it on your computer, and we\u2019ll use them a bit later.</li> <li>Birme.net - Resize Images</li> <li>Resizing Images using Birme.net</li> </ul>"},{"location":"diffusion/dream-booth/#renaming-your-images","title":"Renaming Your Images","text":"<p>We\u2019ll also want to rename our images to contain the subject\u2019s name:</p> <ol> <li> <p>Firstly, the subject name should be one unique/random/unknown keyword. This is because Stable Diffusion also has some knowledge of The Sandman from other sources other than the one played by Tom Sturridge and we don\u2019t want it to get confused and make a combination of interpretations of The Sandman. As such, I\u2019ll call it Sandman2022 to make sure it\u2019s unique.</p> </li> <li> <p>Renaming images to subject (1), subject (2) .. subject (30). This is because, using this method, you can train multiple subjects at once. If you want to fine-tune Stable Diffusion with Sandman, your friend Kevin, and your cat, you can give it prepare images for each of them. For the Sandman you\u2019d have Sandman2022 (1), Sandman2022 (2) \u2026 Sandman (30), for Kevin you\u2019d have KevinKevinson2022 (1), KevinKevinson2022 (2) \u2026 KevinKevinson (30), and for your cat you\u2019d have DexterTheCat (1), DexterTheCat (2) \u2026 DexterTheCat(30).</p> </li> </ol> <p>Here\u2019s me renaming my images for Sandman2022 in bulk on Windows. Just select them all, right click one of them and click Rename and give it what name you want and click anywhere to finish the renaming. Everything else will be renamed as well.</p>"},{"location":"diffusion/fine-tuning/","title":"Fine-tuning Latent Diffusion Model","text":"<p>Source: Reddit</p>"},{"location":"diffusion/fine-tuning/#textual-inversion","title":"Textual Inversion","text":"<p>Textual Inversion - trains a word with one or more vectors that approximate your image. So if it is something it already has seen lots of examples of, it might have the concept and just need to 'point' at it. It is just expanding the vocabulary of model but all information it uses is already in the model.</p>"},{"location":"diffusion/fine-tuning/#dreambooth","title":"Dreambooth","text":"<p>Dreambooth - this is essentially model fine tuning, which changes the weights of the main model. Dreambooth differs from typical fine tuning in that in tries to keep from forgetting/overwriting adjacent concepts during the tuning.</p>"},{"location":"diffusion/fine-tuning/#hypernetwork","title":"Hypernetwork","text":"<p>Hypernetworks - this is basically an adaptive head - it takes information from late in the model but injects information from the prompt 'skipping' the rest of the model. So it is similar to fine tuning the last 2 layers of a model but it gets much more signal from the prompt (it is taking the clip embedding of the prompt right before the output layer).</p>"},{"location":"diffusion/fine-tuning/#textual-inversion-vs-hypernetworks","title":"Textual Inversion vs Hypernetworks","text":"<p>Textual Inversion and Hyper Network have different driving principles, and Textual Inversion has much smaller capacity of learning results than Hyper Network.</p> <p>Textual Inversion has a slower learning speed than Hyper Network, so it is more suitable for learning specific objects, characters, features, etc. than abstract things such as patterns and painting styles. Also, in order to memorize the pattern and painting style, it is necessary to prepare data that has been unified to some extent, such as coloring and color usage, so it is more difficult to prepare learning data than Hyper Network.</p> <p>Also, Hyper Network can only embed one at a time, but even so, it is OK if you prepare a large amount of data using various patterns of composition, materials, and techniques and let it learn. Therefore, it can be said that Hyper Network is more suitable for improving the accuracy of illustrations. However, textual inversion is easier to handle if you want to remember specific patterns and characteristics.</p>"},{"location":"diffusion/fine-tuning/#training-hypernetworks","title":"Training Hypernetworks","text":"<p>hyper network layer structure If write \"1, 2, 1\", hypernetworks are composed of 2 fully connected layers whose intermediate dim is 2x, which is same as up to now. The more you add the number, like \"1, 2, 4, 2, 1\", the more the structure of hypernetworks becomes deeper. Deep hypernetworks are suited for training with large datasets.</p> <p>Add layer normalization If checked, add layer normalization after every fully connected layer. It would be meaningful to prevent hypernetworks from overfitting and make training more stable.</p> <p>https://rentry.org/sd-e621-textual-inversion</p>"},{"location":"diffusion/fine-tuning/#discussions","title":"Discussions","text":"<ul> <li>Hypernetwork training topic</li> </ul>"},{"location":"diffusion/fine-tuning/#links","title":"Links","text":"<ul> <li>Stable Diffusion Models</li> </ul>"},{"location":"diffusion/glossary/","title":"Glossary","text":""},{"location":"diffusion/glossary/#noise","title":"Noise","text":""},{"location":"diffusion/glossary/#unet","title":"UNet","text":"<ul> <li>GroupNorm applies group normalization to the inputs of each block</li> <li>Dropout layers for smoother training</li> <li>Multiple resnet layers per block (if layers_per_block isn't set to 1)</li> <li>Attention (usually used only at lower resolution blocks)</li> <li>Conditioning on the timestep.</li> <li>Downsampling and upsampling blocks with learnable parameters</li> </ul>"},{"location":"diffusion/glossary/#ddpm","title":"DDPM","text":""},{"location":"diffusion/glossary/#schedulers-or-samplers","title":"Schedulers or Samplers","text":""},{"location":"diffusion/glossary/#sources","title":"Sources","text":"<ul> <li>https://github.com/huggingface/diffusion-models-class/tree/main/unit1</li> </ul>"},{"location":"diffusion/ldm/","title":"Latent Diffusion Models","text":"<p>Recent advances in machine learning and artificial intelligence have made it possible to generate high-resolution images using latent diffusion models. These models are a type of mathematical model that is used to study the spread of knowledge, ideas, or innovations through a population or social network. In the context of image synthesis, these models can be used to generate photorealistic images from low-resolution inputs.</p> <p>One of the key challenges in generating high-resolution images with latent diffusion models is the so-called \"resolution gap.\" This refers to the difference between the resolution of the input image and the desired output image. In order to generate a high-resolution output image from a low-resolution input image, the latent diffusion model must be able to fill in the missing details and add new features to the image.</p> <p>Recent research has demonstrated that latent diffusion models can be trained to perform high-resolution image synthesis using a process called \"progressive growing.\" In this process, the latent diffusion model is trained on a set of low-resolution images and then gradually increased in resolution as it generates high-resolution outputs. This allows the model to learn the finer details of the images and generate more realistic outputs.</p> <p>One of the key advantages of using latent diffusion models for image synthesis is that they can generate high-resolution images that are consistent with the input image. This means that the generated images will have the same style and composition as the input image, but with added details and features. This can be useful for applications such as image super-resolution, inpainting, and stylization.</p> <p>Overall, the use of latent diffusion models for high-resolution image synthesis is a promising area of research that has the potential to revolutionize the field of computer graphics and image processing. By leveraging the power of machine learning and AI, these models can generate photorealistic images from low-resolution inputs, and open up new possibilities for image manipulation and generation.</p>"},{"location":"diffusion/prompting/","title":"Prompting","text":""},{"location":"diffusion/prompting/#prompt-weighting","title":"Prompt Weighting","text":"<p>Source: AUTOMATIC1111</p> <p>Using () in the prompt increases the model's attention to enclosed words, and [] decreases it. You can combine multiple modifiers:</p> <p>Cheat Sheet</p> <ul> <li>a (word) - increase attention to word by a factor of 1.1</li> <li>a ((word)) - increase attention to word by a factor of 1.21 (= 1.1 * 1.1)</li> <li>a [word] - decrease attention to word by a factor of 1.1</li> <li>a (word:1.5) - increase attention to word by a factor of 1.5</li> <li>a (word:0.25) - decrease attention to word by a factor of 4 (= 1 / 0.25)</li> <li>a (word) - use literal () characters in prompt</li> </ul> <p>With (), a weight can be specified like this: (text:1.4). If the weight is not specified, it is assumed to be 1.1. Specifying weight only works with () not with [].</p> <p>If you want to use any of the literal ()[] characters in the prompt, use the backslash to escape them: anime_(character).</p> <p>On 2022-09-29, a new implementation was added that supports escape characters and numerical weights. A downside of the new implementation is that the old one was not perfect and sometimes ate characters: \"a (((farm))), daytime\", for example, would become \"a farm daytime\" without the comma. This behavior is not shared by the new implementation which preserves all text correctly, and this means that your saved seeds may produce different pictures. For now, there is an option in settings to use the old implementation.</p> <p>NAI uses my implementation from before 2022-09-29, except they have 1.05 as the multiplier and use {} instead of (). So the conversion applies:</p> <ul> <li>their {word} = our (word:1.05)</li> <li>their {{word}} = our (word:1.1025)</li> <li>their [word] = our (word:0.952) (0.952 = 1/1.05)</li> <li>their [[word]] = our (word:0.907) (0.907 = 1/1.05/1.05)</li> </ul>"},{"location":"diffusion/prompting/#negative-prompts","title":"Negative Prompts","text":"<p>Negative prompts are essential for 2.0 or greater models.</p> <p>Negative Prompt Example</p> <p>disfigured, kitsch, ugly, oversaturated, grain, low-res, Deformed, blurry, bad anatomy, disfigured, poorly drawn face, mutation, mutated, extra limb, ugly, poorly drawn hands, missing limb, blurry, floating limbs, disconnected limbs, malformed hands, blur, out of focus, long neck, long body, ugly, disgusting, poorly drawn, childish, mutilated, mangled, old, surreal, watermark</p>"},{"location":"diffusion/samplers/","title":"Samplers","text":"<p>Source: Reddit</p> <p>There are ancestral samplers (marked by the letter \"a\") whose output will keep changing as the number of steps increases, and the others, which will eventually settle on a final image. This final image is different between Karras and non-Karras samplers, but very similar within those groups.</p> <p>Then there's DPM fast, which doesn't feel particularly fast, and which always seems to produce inferior images for me.</p> <p>DPM adaptive is also its own thing, as it ignores step count and works with cfg scale instead. More cfg = more steps. I kind of like it when I'm not sure how many steps I should use, but the final step count is generally high. It can also take a long, long time if you use the \"AND\" prompt syntax - I have interrupted it after waiting for over 2000 steps.</p> <p>Most differences between the different samplers appear at low step counts &lt; 20. Some produce distinguishable images faster and some slower, and may look very different in the early stages. That's random though, there's no good way to predict what those early images will turn into with more steps.</p> <p>In practice, the choice of samplers is just preference, there's actually very little difference in the long run.</p> <p>First, you have to understand what samplers are.  These are discretized differential equations.  I'm not going to go into these at all in this post, but I've covered them before.</p> <p>DDIM and PLMS were the original samplers.  They were part of Latent Diffusion's repository.  They stand for the papers that introduced them, Denoising Diffusion Implicit Models and Pseudo Numerical Methods for Diffusion Models on Manifolds.</p> <p>Almost all other samplers come from work done by @RiversHaveWings or Katherine Crowson, which is mostly contained in her work at this repository.  She is listed as the principal researcher at Stability AI. Her notes for those samplers are as follows:</p> <ul> <li>\u2060Euler - Implements Algorithm 2 (Euler steps) from Karras et al. (2022)</li> <li>\u2060Euler_a - Ancestral sampling with Euler method steps.</li> <li>\u2060LMS - No information, but can be inferred that the name comes from linear multistep coefficients</li> <li>\u2060Heun - Implements Algorithm 2 (Heun steps) from Karras et al. (2022).</li> <li>\u2060DPM2 - A sampler inspired by DPM-Solver-2 and Algorithm 2 from Karras et al. (2022).</li> <li>\u2060DPM2 a - Ancestral sampling with DPM-Solver second-order steps</li> <li>\u2060DPM++ 2s a - Ancestral sampling with DPM-Solver++(2S) second-order steps</li> <li>\u2060DPM++ 2M - DPM-Solver++(2M)</li> <li>\u2060DPM++ SDE - DPM-Solver++ (stochastic)</li> <li>\u2060DPM fast - DPM-Solver-Fast (fixed step size). See https://arxiv.org/abs/2206.00927</li> <li>\u2060DPM adaptive - DPM-Solver-12 and 23 (adaptive step size). See https://arxiv.org/abs/2206.00927</li> </ul> <p>The 'Karras' versions of these weren't made by Karras as far as I can tell, but instead are using a variance-exploding scheduler from the Karras paper, which of course is extra confusing given that most of the other samplers were inspired by that paper in the first place.</p> <p>In terms of \"what will I get at high step counts\", most of the time you will get similar pictures from:</p> <ul> <li>\u2060Group A: Euler_a, DPM2 a, DPM++ 2S a, DPM fast (after many steps), DPM adaptive, DPM2 a Karras</li> <li>\u2060Group B: Euler, LMS, Heun, DPM2, DPM++ 2M, DDIM, PLMS</li> <li>\u2060Group C: LMS Karras, DPM2 Karras, DPM++ 2M Karras</li> </ul> <p>As far as convergence behavior:</p> <ul> <li>\u2060Does not converge: Euler_a, DPM2 a, DPM Fast, DDIM, PLMS, DPM adaptive, DPM2 a Karras</li> <li>\u2060Converges: Euler, LMS, Heun, DPM2, DPM++ 2M, LMS Karras, DPM2 Karras, DPM++ 2M Karras</li> </ul> <p>By required steps:</p> <ul> <li>\u2060Euler_a = Euler = DPM++2M = LMS Karras (image degraded at high steps) &gt;</li> <li>\u2060LMS = DPM++ 2M Karras = Heun (slower) = DPM++ 2S a (slower) = DPM++ 2S a Karras &gt;</li> <li>\u2060DDIM = PLMS = DPM2 (slower) = DPM 2 Karras&gt;</li> <li>\u2060DPM Fast = DPM2 a (slower)</li> </ul> <p>These all give somewhat different results so a person could prefer the output of any of the models at a given CFG or step range.  I do think that there is an argument to be made that DPM++ 2M and Euler_a are good generic samplers for most people, however, as they both resolve to a good picture at low seeds (sub-20) without a hit to iteration speed.  DPM++ 2M has the advantage of converging to a single image more often (if you choose to run the same image at higher seed), but is slightly more prone to deformations at high CFG.</p> <p>To combine all the above:</p> <ul> <li>\u2060Fast, new, converges: DPM++ 2M, DPM++ 2M Karras</li> <li>\u2060Fast, doesn't converge: Euler_a, DPM2 a Karras</li> <li>\u2060Others worth considering: DPM2 a, LMS, DPM++ 2S a Karras</li> <li>\u2060Bugged: LMS Karras (at high steps</li> <li>\u2060Older, fast but maybe lower quality final result: Euler, LMS, Heun</li> <li>\u2060Slow: DDIM, PLMS, DPM2, DPM 2 Karras, DPM Fast, DPM2 a</li> </ul> <p>TL;DR</p> <p>These are confusingly named and mostly come from academic papers.  The actual mechanisms of each sampler aren't really relevant to their outputs.  In general PLMS, DDIM, or DPM fast are slower and give worse results.</p> <p>Instead, try out DPM++ 2M and Euler_a, along with DPM++ 2M Karras. These should all give good results at a low seed value.</p>"},{"location":"diffusion/tools/","title":"Tools &amp; Blogs and Useful Links","text":""},{"location":"diffusion/tools/#tools","title":"Tools","text":""},{"location":"diffusion/tools/#diffusion-image-search-engines","title":"Diffusion Image Search Engines","text":"<ul> <li>Lexica</li> <li>Openart.ai</li> <li>AI Art Apps</li> </ul>"},{"location":"diffusion/tools/#prompt-engineering","title":"Prompt Engineering","text":"<ul> <li>https://huggingface.co/spaces/Gustavosta/MagicPrompt-Stable-Diffusion</li> </ul>"},{"location":"diffusion/tools/#img2prompt","title":"img2prompt","text":"<ul> <li>https://replicate.com/methexis-inc/img2prompt</li> <li>https://colab.research.google.com/github/pharmapsychotic/clip-interrogator/blob/main/clip_interrogator.ipynb#scrollTo=xpPKQR40qvz2</li> </ul>"},{"location":"diffusion/tools/#upscaling","title":"Upscaling","text":"<ul> <li>https://github.com/xinntao/Real-ESRGAN</li> </ul>"},{"location":"diffusion/tools/#depth-map","title":"Depth-map","text":"<ul> <li>https://huggingface.co/spaces/pytorch/MiDaS</li> </ul>"},{"location":"diffusion/tools/#image-prep","title":"Image Prep","text":"<ul> <li>https://www.birme.net/?target_width=512&amp;target_height=512</li> </ul>"},{"location":"diffusion/tools/#blogs","title":"Blogs","text":"<ul> <li>Stable Diffusion Training for Personal Embedding</li> <li>The Illustrated Stable Diffusion</li> <li>A Traveler\u2019s Guide to the Latent Space </li> </ul>"},{"location":"diffusion/tools/#useful-links","title":"Useful Links","text":""},{"location":"diffusion/tools/#stable-diffusion-update","title":"Stable Diffusion Update","text":"<ul> <li>https://rentry.org/sdupdates3</li> <li>https://rentry.org/sdgoldmine</li> </ul>"},{"location":"diffusion/training-ldm/","title":"Training Latent Diffusion Model","text":""},{"location":"diffusion/training-ldm/#kernel-inception-distance","title":"Kernel Inception Distance","text":"<p>The kernel inception distance (KID) is a measure of the similarity between two sets of images. It was introduced by Google AI researcher, Tobias Weyand, in his paper \"Kernel Inception Distance: A New Distance Measure for Improved Image Quality Assessment\". In this paper, Weyand proposed using the KID to measure the difference between the activations of two sets of images when passed through an inception network, which is a type of deep learning neural network. The KID is calculated as the squared L2 distance between the distributions of the activations of the two sets of images. It is typically used in the field of computer vision to evaluate the performance of image generation algorithms.</p>"},{"location":"diffusion/training-ldm/#sources","title":"Sources","text":"<ul> <li>https://keras.io/examples/generative/ddim #denoising-diffusion-implicit-models</li> <li>https://benanne.github.io/2022/01/31/diffusion.html</li> <li>https://github.com/apapiu/guided-diffusion-keras</li> <li>https://www.louisbouchard.ai/latent-diffusion-models/</li> <li>https://www.kaggle.com/code/apapiu/train-latent-diffusion-in-keras-from-scratch</li> <li>https://github.com/CompVis/taming-transformers</li> <li>https://github.com/CompVis/latent-diffusion</li> <li>https://github.com/huggingface/diffusers</li> </ul>"},{"location":"diffusion/vit/","title":"Vision Transformers ViTs","text":"<p>Uzun yillardir CNN algoritmalari goruntu isleme konularinda neredeyse tek cozumumuzdu. ResNet, EfficientNetm Inception vb. gibi tum mimariler temelde CNN mimarilerini kullanarak goruntu isleme problemlerimizi cozmede bize yardimci oluyor. Bugun sizinle goruntu isleme konusunda farkli bir yaklasim olan ViT'ler yani Vision Transformerlari inceleyecegiz.</p> <p>Aslinda Transformer kavrami NLP alaninda yurutulen teknolojiler icin ortaya konmustu. Attention is all you need adiyla yayinlanan makale NLP problemlerinin cozumu icin devrimsel cozumler getirdi, artik Transformer-based mimarilar nlp gorevleri icin standart bir hale geldi.</p> <p>Cok da uzun bir sure gecmeden dogal dil alaninda kullanilan bu mimari goruntu alaninda da ufak degisikliklerle uyarlandi. Bu calismayi \"An image is worth 16x16 words\" olarak bu linkteki paperdan okuyabilirsiniz. Asagida daha detayli anlatacagim fakat temel olarak bir goruntuyu 16x16 boyutlu parcalara ayirarak embeddinglerini cikartmak uzere. Temel bazi konulari anlatmadan bu mekanikleri aciklamak cok zor bu yuzden hiz kaybetmeden konuyu daha iyi anlamak icin alt basliklara gecelim.</p>"},{"location":"diffusion/vit/#attention-mekanizmasi","title":"Attention Mekanizmasi","text":""},{"location":"diffusion/vit/#mimari","title":"Mimari","text":"<p>ViT mimarisi birka\u00e7 a\u015famadan olu\u015fur:</p> <ol> <li> <p>Patch + Position Embedding (inputs) - Giri\u015f g\u00f6r\u00fcnt\u00fcs\u00fcn\u00fc bir dizi g\u00f6r\u00fcnt\u00fc parcalarina (patches) d\u00f6n\u00fc\u015ft\u00fcr\u00fcr ve parcalarin hangi s\u0131rayla geldi\u011fini bilmek icin bir konum numaras\u0131 ekler.</p> </li> <li> <p>Linear projection of flattened patches (Embedded Patches) - G\u00f6r\u00fcnt\u00fc parcalari embeddinglere d\u00f6n\u00fc\u015f\u00fcr, g\u00f6r\u00fcnt\u00fcleri direkt kullanmak yerine embeddingleri kullanman\u0131n yarar\u0131, embeddingler g\u00f6r\u00fcnt\u00fcn\u00fcn e\u011fitimle \u00f6\u011frenilebilir bir temsili olmas\u0131d\u0131r.</p> </li> <li> <p>Norm - Bir sinir a\u011f\u0131n\u0131 d\u00fczenli hale getirmek (overfitting'i azaltmak) i\u00e7in bir teknik olan \"Layer Normalization\" veya \"LayerNorm\"un k\u0131saltmas\u0131d\u0131r.</p> </li> <li> <p>Multi-Head Attention - Bu, Multi-Headed Self-Attention layer veya k\u0131saca \"MSA\" d\u0131r.</p> </li> <li> <p>MLP (Multilayer perceptron) - Genellikle herhangi bir ileri besleme katman\u0131 koleksiyonunu olarak dusunebilirsiniz.</p> </li> <li> <p>Transformer Encoder - Transformer Encoder, yukar\u0131da listelenen katmanlar\u0131n bir koleksiyonudur. Transformer Encoderin i\u00e7inde iki atlama (skip) ba\u011flant\u0131s\u0131 vard\u0131r (\"+\" sembolleri), katman\u0131n girdilerinin do\u011frudan sonraki katmanlar\u0131n yan\u0131 s\u0131ra hemen sonraki katmanlara beslendi\u011fi anlam\u0131na gelir. Genel ViT mimarisi, birbiri \u00fczerine y\u0131\u011f\u0131lm\u0131\u015f bir dizi Transformer kodlay\u0131c\u0131dan olu\u015fur.</p> </li> <li> <p>MLP Head - Bu, mimarinin \u00e7\u0131kt\u0131 katman\u0131d\u0131r, bir girdinin \u00f6\u011frenilen \u00f6zelliklerini bir s\u0131n\u0131f \u00e7\u0131kt\u0131s\u0131na d\u00f6n\u00fc\u015ft\u00fcr\u00fcr. G\u00f6r\u00fcnt\u00fc s\u0131n\u0131fland\u0131rmas\u0131 \u00fczerinde \u00e7al\u0131\u015ft\u0131\u011f\u0131m\u0131z i\u00e7in buna \"s\u0131n\u0131fland\u0131r\u0131c\u0131 kafa\" da diyebilirsiniz. MLP Kafas\u0131n\u0131n yap\u0131s\u0131 MLP blo\u011funa benzer.</p> </li> </ol> <p></p>"},{"location":"diffusion/vit/#patch-embeddings","title":"Patch Embeddings","text":"<p>Standart Transformer, giri\u015fi tek boyutlu token embedding dizisi olarak al\u0131r. 2B g\u00f6r\u00fcnt\u00fcleri i\u015flemek i\u00e7in x\u2208R^{H\u00d7W\u00d7C} g\u00f6r\u00fcnt\u00fcs\u00fcn\u00fc d\u00fczle\u015ftirilmi\u015f 2B patchlere (goruntu parcalarina) yeniden \u015fekillendiriyoruz.</p> <p>Burada, (H, W) orijinal g\u00f6r\u00fcnt\u00fcn\u00fcn \u00e7\u00f6z\u00fcn\u00fcrl\u00fc\u011f\u00fcd\u00fcr ve (P, P) her g\u00f6r\u00fcnt\u00fc par\u00e7as\u0131n\u0131n \u00e7\u00f6z\u00fcn\u00fcrl\u00fc\u011f\u00fcd\u00fcr. Resim sabit boyutlu parcalara b\u00f6l\u00fcnm\u00fc\u015ft\u00fcr, a\u015fa\u011f\u0131daki resimde yama boyutu 16\u00d716 olarak al\u0131nm\u0131\u015ft\u0131r. Yani g\u00f6r\u00fcnt\u00fcn\u00fcn boyutlar\u0131 48\u00d748 olacakt\u0131r.</p> <p>Self-attention maliyeti quadratictir. G\u00f6r\u00fcnt\u00fcn\u00fcn her pikselini girdi olarak iletirsek, Self-attention her pikselin di\u011fer t\u00fcm piksellerle ilgilenmesini gerektirir. Self-attention ikinci dereceden maliyeti \u00e7ok maliyetli olacak ve ger\u00e7ek\u00e7i girdi boyutuna \u00f6l\u00e7eklenmeyecek; bu nedenle, g\u00f6r\u00fcnt\u00fc parcalara b\u00f6l\u00fcn\u00fcr.</p> <pre><code>import matplotlib.pyplot as plt\nfrom PIL import Image\nimport numpy as np\n</code></pre> <pre><code>img = Image.open('cobanov-profile.jpg')\nimg.thumbnail((224, 224))\narray_img = np.array(img)\narray_img.shape\n</code></pre> <pre><code># Setup hyperparameters and make sure img_size and patch_size are compatible\nimg_size = 224\npatch_size = 16\nnum_patches = img_size/patch_size \nassert img_size % patch_size == 0, \"Image size must be divisible by patch size\" \nprint(f\"Number of patches per row: {num_patches}\\\n        \\nNumber of patches per column: {num_patches}\\\n        \\nTotal patches: {num_patches*num_patches}\\\n        \\nPatch size: {patch_size} pixels x {patch_size} pixels\")\n\n</code></pre> <pre><code># Create a series of subplots\nfig, axs = plt.subplots(nrows=img_size // patch_size, # need int not float\n                        ncols=img_size // patch_size, \n                        figsize=(num_patches, num_patches),\n                        sharex=True,\n                        sharey=True)\n\n# Loop through height and width of image\nfor i, patch_height in enumerate(range(0, img_size, patch_size)): # iterate through height\n    for j, patch_width in enumerate(range(0, img_size, patch_size)): # iterate through width\n\n        # Plot the permuted image patch (image_permuted -&gt; (Height, Width, Color Channels))\n        axs[i, j].imshow(array_img[patch_height:patch_height+patch_size, # iterate through height \n                                        patch_width:patch_width+patch_size, # iterate through width\n                                        :]) # get all color channels\n\n        # Set up label information, remove the ticks for clarity and set labels to outside\n        axs[i, j].set_ylabel(i+1, \n                             rotation=\"horizontal\", \n                             horizontalalignment=\"right\", \n                             verticalalignment=\"center\") \n        axs[i, j].set_xlabel(j+1) \n        axs[i, j].set_xticks([])\n        axs[i, j].set_yticks([])\n        axs[i, j].label_outer()\n\n# Set a super title\nplt.show()\n</code></pre> <p></p>"},{"location":"diffusion/vit/#linear-projection-of-flattened-patches","title":"Linear Projection of Flattened Patches","text":"<p>Parcalar Transformer blo\u011funa ge\u00e7irmeden \u00f6nce, makalenin yazarlar\u0131 yamalar\u0131 \u00f6nce do\u011frusal bir projeksiyondan ge\u00e7irmeyi faydal\u0131 buldular. Bir yamay\u0131 al\u0131p b\u00fcy\u00fck bir vekt\u00f6re a\u00e7arlar ve yamal\u0131 g\u00f6mmeler olu\u015fturmak i\u00e7in g\u00f6mme matrisiyle \u00e7arparlar ve bu, konumsal g\u00f6mmeyle birlikte transformat\u00f6re giden \u015feydir.</p> <p>Her yama, t\u00fcm piksel kanallar\u0131n\u0131 bir yamada birle\u015ftirerek ve ard\u0131ndan bunu do\u011frusal olarak istenen giri\u015f boyutuna yans\u0131tarak g\u00f6m\u00fclen bir 1B yamaya d\u00fczle\u015ftirilir.</p>"},{"location":"diffusion/vit/#positional-embeddings","title":"Positional embeddings","text":"<p>Nasil konusurken dilde kelimelerin s\u0131ras\u0131 kurdugunuz cumlenin anlamini tamamen degistiriyorsa, goruntuler uzerinde de buna dikkat etmek gerekir. Maalesef transformerlar, patch embeddinglerin \"s\u0131ras\u0131n\u0131\" dikkate alan herhangi bir varsay\u0131lan mekanizmaya sahip de\u011fildir.</p> <p>Bir yapboz yaptiginizi dusunun, elinizdeki parcalar (yani onceki adimlarda yaptigimiz patch embeddingler) karisik bir duzende geldiginde goruntunun tamaminda ne oldugunu anlamak oldukca zordur, bu transformat\u00f6rler i\u00e7in de ge\u00e7erli. Modelin yapboz par\u00e7alar\u0131n\u0131n s\u0131ras\u0131n\u0131 veya konumunu \u00e7\u0131karmas\u0131n\u0131 sa\u011flaman\u0131n bir yoluna ihtiyac\u0131m\u0131z var.</p> <p>Transformat\u00f6rler, giri\u015f elemanlar\u0131n\u0131n yap\u0131s\u0131ndan ba\u011f\u0131ms\u0131zd\u0131r. Her yamaya \u00f6\u011frenilebilir konum yerle\u015ftirmeleri eklemek, modelin g\u00f6r\u00fcnt\u00fcn\u00fcn yap\u0131s\u0131 hakk\u0131nda bilgi edinmesine olanak tan\u0131r. Positional embeddinglerde d\u00fczeni modele aktarmamizi sagliyor. ViT i\u00e7in, bu Positional embeddingler, patch embeddingler ile ayn\u0131 boyutlulu\u011fa sahip \u00f6\u011frenilmi\u015f vekt\u00f6rlerdir.</p> <p>Bu konumsal yerle\u015ftirmeler, \u00f6n e\u011fitim s\u0131ras\u0131nda ve (bazen) ince ayar s\u0131ras\u0131nda \u00f6\u011frenilir. E\u011fitim s\u0131ras\u0131nda, bu yerle\u015ftirmeler, \u00f6zellikle ayn\u0131 s\u00fctunu ve sat\u0131r\u0131 payla\u015fan kom\u015fu konum yerle\u015ftirmelerine y\u00fcksek benzerlik g\u00f6sterdikleri vekt\u00f6r uzaylar\u0131nda birle\u015fir.</p> <p></p>"},{"location":"diffusion/vit/#transformer-encoding","title":"Transformer Encoding","text":"<ul> <li> <p>Multi-Head Self Attention Layer(MSP) birden fazla attention ciktisini lineer olarak beklenen boyutlara esitlemek i\u00e7in kullanilir. MSP, g\u00f6r\u00fcnt\u00fcdeki yerel ve global ba\u011f\u0131ml\u0131l\u0131klar\u0131 \u00f6\u011frenmeye yard\u0131mc\u0131 olur.</p> </li> <li> <p>Multi-Layer Perceptrons(MLP) - Klasik sinir agi katmani fakat aktivasyon fonksiyonu olarak GELU kullaniyoruz.</p> </li> <li> <p>Layer Norm(LN) e\u011fitim g\u00f6r\u00fcnt\u00fcleri aras\u0131nda herhangi bir yeni ba\u011f\u0131ml\u0131l\u0131k getirmedi\u011finden her bloktan \u00f6nce uygulan\u0131r. E\u011fitim s\u00fcresini ve genelleme performans\u0131n\u0131 iyile\u015ftirmeye yard\u0131mc\u0131 olun.</p> </li> <li> <p>Residual connections gradyanlar\u0131n do\u011frusal olmayan aktivasyonlardan ge\u00e7meden do\u011frudan a\u011f \u00fczerinden akmas\u0131na izin verdi\u011fi i\u00e7in her bloktan sonra uygulan\u0131r. G\u00f6r\u00fcnt\u00fc s\u0131n\u0131fland\u0131rmas\u0131 i\u00e7in, \u00f6n e\u011fitim zaman\u0131nda bir gizli katman ve ince ayar i\u00e7in tek bir do\u011frusal katman ile MLP kullan\u0131larak bir s\u0131n\u0131fland\u0131rma kafas\u0131 uygulan\u0131r. ViT'nin \u00fcst katmanlar\u0131 global \u00f6zellikleri \u00f6\u011frenirken, alt katmanlar hem global hem de yerel \u00f6zellikleri \u00f6\u011frenir. Bu, ViT'nin daha genel kal\u0131plar\u0131 \u00f6\u011frenmesini sa\u011flar.</p> </li> </ul>"},{"location":"diffusion/vit/#egitim","title":"Egitim","text":"<p>ViT, b\u00fcy\u00fck veri k\u00fcmelerinde \u00f6nceden e\u011fitilmi\u015ftir ve daha k\u00fc\u00e7\u00fck bir veri k\u00fcmesine ince ayar yap\u0131lm\u0131\u015ft\u0131r.</p> <p>\u0130nce ayar yap\u0131l\u0131rken, \u00f6nceden e\u011fitilmi\u015f son tahmin kafas\u0131 kald\u0131r\u0131l\u0131r ve daha k\u00fc\u00e7\u00fck veri k\u00fcmesine dayal\u0131 olarak s\u0131n\u0131flar\u0131 tahmin etmek i\u00e7in s\u0131f\u0131r ba\u015flat\u0131lm\u0131\u015f bir ileri besleme katman\u0131 ekleriz.</p> <p>\u0130nce ayar, modelin \u00f6nceden e\u011fitildi\u011finden daha y\u00fcksek \u00e7\u00f6z\u00fcn\u00fcrl\u00fckl\u00fc bir g\u00f6r\u00fcnt\u00fcye uygulanabilir, ancak yama boyutu ayn\u0131 kalmal\u0131d\u0131r.</p> <p>Transformers, g\u00f6r\u00fcnt\u00fc yap\u0131s\u0131 hakk\u0131nda \u00f6nceden bilgiye sahip de\u011fildir ve bu nedenle daha uzun e\u011fitim s\u00fcrelerine sahiptir ve modeli e\u011fitmek i\u00e7in b\u00fcy\u00fck veri k\u00fcmeleri gerektirir.</p>"},{"location":"diffusion/vit/#sources","title":"Sources","text":"<ul> <li>https://www.learnpytorch.io/08_pytorch_paper_replicating/#3-replicating-the-vit-paper-an-overview</li> <li>https://theaisummer.com/vision-transformer/</li> <li>https://medium.com/swlh/visual-transformers-a-new-computer-vision-paradigm-aa78c2a2ccf2</li> </ul>"}]}